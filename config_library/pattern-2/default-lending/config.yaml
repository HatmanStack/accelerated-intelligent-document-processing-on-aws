# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

notes: Default settings
ocr:
  backend: "textract"  # Default to Textract for backward compatibility
  model_id: "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
  system_prompt: "You are an expert OCR system. Extract all text from the provided image accurately, preserving layout where possible."
  task_prompt: "Extract all text from this document image. Preserve the layout, including paragraphs, tables, and formatting."
  features:
    - name: LAYOUT
    - name: TABLES
    - name: SIGNATURES
  image:
    target_width: '951'
    target_height: '1268'
classes:
  - name: payslip
    description: An employee wage statement showing earnings, deductions, taxes, and net pay for a specific pay period, typically issued by employers to document compensation details
    attributes:
      - name: employee_name
        description: The full name of the employee receiving the payslip. Look for structured name fields like FirstName, LastName, MiddleName, or a complete name near employee identification sections.
      - name: employee_address
        description: The residential address of the employee. Often found in employee information sections with fields like Line1, Line2, City, State, ZipCode, or as a complete address block.
      - name: company_address
        description: The business address of the employing company. Typically appears at the top of the payslip with company information including street address, city, state, and zip code.
      - name: pay_period_start_date
        description: The beginning date of the pay period covered by this payslip. Look for labels like 'pay period start', 'period from', or date ranges indicating the start of the earning period.
      - name: pay_period_end_date
        description: The ending date of the pay period covered by this payslip. Often labeled as 'pay period end', 'period to', or the end date in a pay period range.
      - name: pay_date
        description: The actual date when the employee was paid. May be labeled as 'pay date', 'payment date', or 'issued date' and typically appears prominently on the payslip.
      - name: current_gross_pay
        description: The total earnings before deductions for the current pay period. Look for 'gross pay', 'total earnings', or 'current gross' in the earnings section.
      - name: ytd_gross_pay
        description: The cumulative gross earnings from the beginning of the year to the current pay period. Often labeled as 'YTD gross', 'year-to-date gross', or 'YTD earnings'.
      - name: current_net_pay
        description: The take-home pay after all deductions for the current pay period. Look for 'net pay', 'take home', or 'current net' typically shown prominently as the final amount.
      - name: ytd_net_pay
        description: The cumulative net pay from the beginning of the year. May be labeled as 'YTD net', 'year-to-date net pay', or cumulative take-home amount.
      - name: federal_taxes
        description: Federal income tax withholdings for the current period and year-to-date. Look for 'Federal Income Tax', 'Fed Tax', or similar labels in the deductions section with Period and YTD amounts.
      - name: state_taxes
        description: State income tax withholdings including current period and year-to-date amounts. Often labeled with state abbreviation like 'NY State Income Tax' or 'State Tax'.
      - name: city_taxes
        description: Local or city income tax deductions. Look for city-specific labels like 'NYC Income Tax' or 'City Tax' in the deductions section.
      - name: regular_hourly_rate
        description: The standard hourly wage rate for regular working hours. May be labeled as 'regular rate', 'hourly rate', or 'base rate' in the earnings breakdown.
      - name: holiday_hourly_rate
        description: The hourly wage rate for holiday work, often higher than regular rate. Look for 'holiday rate', 'premium rate', or 'holiday pay rate' in earnings details.
      - name: employee_number
        description: The unique identifier assigned to the employee by the employer. Look for 'EmployeeNumber', 'employee ID', or 'emp #' fields on the payslip.
      - name: ytd_federal_tax
        description: Year-to-date federal income tax withheld. Look for 'YTDFederalTax' field showing cumulative federal tax deductions.
      - name: ytd_state_tax
        description: Year-to-date state income tax withheld. Look for 'YTDStateTax' field showing cumulative state tax deductions.
      - name: ytd_city_tax
        description: Year-to-date city income tax withheld. Look for 'YTDCityTax' field showing cumulative local tax deductions.
      - name: current_total_deductions
        description: Total amount deducted from gross pay for the current period. Look for 'CurrentTotalDeductions' field summarizing all deductions.
      - name: ytd_total_deductions
        description: Year-to-date total deductions from gross pay. Look for 'YTDTotalDeductions' field showing cumulative deduction amounts.
      - name: currency
        description: The currency in which the payslip amounts are denominated. Look for 'currency' field, typically showing values like 'USD', 'EUR', etc.
      - name: payroll_number
        description: The payroll batch or sequence number for this pay period. Look for 'PayrollNumber' field used for payroll processing identification.
      - name: federal_filing_status
        description: The employee's federal tax filing status. Look for 'FederalFilingStatus' field indicating 'Single', 'Married', etc.
      - name: state_filing_status
        description: The employee's state tax filing status. Look for 'StateFilingStatus' field with state-specific filing designations.

  - name: driver-licenses
    description: >-
      An official government-issued identification document that authorizes an individual to operate motor vehicles, containing personal information, physical characteristics, and driving privileges
    attributes:
      - name: first_name
        description: The given name of the license holder. Look for 'FIRST_NAME' field in NAME_DETAILS section or the first part of a full name display.
      - name: last_name
        description: The family name of the license holder. Found in 'LAST_NAME' field within NAME_DETAILS or as the surname in the name section.
      - name: middle_name
        description: The middle name of the license holder. May appear as 'MIDDLE_NAME' in NAME_DETAILS or as an initial between first and last names.
      - name: suffix_name
        description: Name suffix such as Jr., Sr., III, etc. Look for 'SUFFIX' or 'SuffixName' in the name details section.
      - name: date_of_birth
        description: The birth date of the license holder. Often labeled as 'DATE_OF_BIRTH', 'DOB', or 'Born' and typically in YYYY-MM-DD format.
      - name: id_number
        description: The unique driver's license identification number. Look for 'ID_NUMBER', 'License Number', or 'DL Number' prominently displayed on the license.
      - name: state_name
        description: The state or jurisdiction that issued the license. May appear as 'STATE_NAME' or state abbreviation like 'MA', 'CA', etc.
      - name: expiration_date
        description: The date when the license expires and needs renewal. Look for 'EXPIRATION_DATE', 'Expires', or 'EXP' followed by a date in YYYY-MM-DD format.
      - name: date_of_issue
        description: The date when the license was originally issued. May be labeled as 'DATE_OF_ISSUE', 'Issued', or 'ISS' with a date in YYYY-MM-DD format.
      - name: class
        description: The type or category of driving privileges granted. Look for 'CLASS' field, often a single letter like 'D' for regular driver's license.
      - name: sex
        description: The gender of the license holder. Found in PERSONAL_DETAILS as 'SEX' field, typically 'M' for male or 'F' for female.
      - name: height
        description: The physical height of the license holder. Look for 'HEIGHT' in PERSONAL_DETAILS, often in feet-inches format like '5-10'.
      - name: weight
        description: The weight of the license holder. May appear as 'WEIGHT' in PERSONAL_DETAILS section, typically in pounds.
      - name: eye_color
        description: The color of the license holder's eyes. Found as 'EYE_COLOR' in PERSONAL_DETAILS, often abbreviated like 'BLU', 'BRN', 'GRN'.
      - name: hair_color
        description: The color of the license holder's hair. Look for 'HAIR_COLOR' in PERSONAL_DETAILS section with color abbreviations.
      - name: street_address
        description: The street address of the license holder's residence. Found in ADDRESS_DETAILS as 'STREET_ADDRESS' or similar field.
      - name: city
        description: The city of residence. Look for 'CITY' field in ADDRESS_DETAILS section.
      - name: state
        description: The state of residence. Found as 'STATE' in ADDRESS_DETAILS, may be abbreviated.
      - name: zip_code
        description: The postal code of the address. Look for 'ZIP_CODE' in ADDRESS_DETAILS section.
      - name: restrictions
        description: Any driving restrictions or limitations. Look for 'RESTRICTIONS' field, may contain codes or 'NONE' if no restrictions apply.
      - name: endorsements
        description: Special driving endorsements or certifications. Found in 'ENDORSEMENTS' field, may list specific endorsements or 'NONE'.
      - name: county
        description: The county of residence. Look for 'COUNTY' field in the license information, though may be empty if not provided.

  - name: bank-checks
    description: >-
      A written financial instrument directing a bank to pay a specific amount of money from the account holder's account to a designated payee
    attributes:
      - name: check_number
        description: The unique sequential number identifying the specific check. Look for 'check_number' or a numeric identifier, often in the upper right corner of the check.
      - name: date
        description: The date when the check was written. May be handwritten or printed, typically found in the upper right area of the check near 'Date' label.
      - name: payee_name
        description: The name of the person or entity receiving the payment. Look for 'payee_name' or text following 'Pay to the order of' line.
      - name: dollar_amount
        description: The numerical amount to be paid. Found as 'dollar_amount' in the analysis, typically in a box on the right side of the check.
      - name: amount_in_words
        description: The payment amount written out in words. Look for 'amount_in_words' field, usually on a line below the payee name ending with 'DOLLARS'.
      - name: account_holder_name
        description: The name of the person or entity who owns the bank account. Found as 'account_holder_name', typically printed in the upper left corner.
      - name: bank_name
        description: The name of the financial institution. Look for 'bank_name' field, usually printed prominently on the check.
      - name: bank_routing_number
        description: The bank's routing number for electronic transactions. Found as 'bank_routing_number', typically in the MICR line at the bottom.
      - name: routing_number_valid
        description: Indicates whether the routing number is valid. Look for 'routing_number_valid' boolean field in the analysis results.
      - name: memo
        description: Optional note or reference information. Found in 'memo' field, usually in the lower left area of the check labeled 'For' or 'Memo'.
      - name: is_signed
        description: Indicates whether the check has been signed by the account holder. Look for 'is_signed' boolean field indicating signature presence.

  - name: bank-statement
    description: >-
      A periodic financial document issued by banks detailing account activity, balances, and transactions over a specific time period
    attributes:
      - name: account_holder_name
        description: The name of the person or entity who owns the bank account. Look for 'account_holder_name' typically displayed prominently at the top of the statement.
      - name: account_holder_address
        description: The mailing address of the account holder. Found as 'account_holder_address', usually below or near the account holder name.
      - name: account_number
        description: The unique identifier for the bank account. Look for 'account_number' field, often partially masked for security purposes.
      - name: account_type
        description: The category of bank account such as checking, savings, etc. May be found as 'account_type' field or inferred from context.
      - name: statement_start_date
        description: The beginning date of the statement period. Look for 'statement_start_date' indicating when the reporting period begins.
      - name: statement_end_date
        description: The ending date of the statement period. Found as 'statement_end_date', typically paired with the start date to show the covered period.
      - name: bank_name
        description: The name of the financial institution issuing the statement. Look for 'bank_name' field, usually displayed prominently at the top.
      - name: branch_transit_number
        description: The specific branch identifier. May be found as 'branch_transit_number' or similar routing information.
      - name: account_summary
        description: Summary of account activity including opening balance, closing balance, and key totals. Look for 'account_summary' with summary_desc and summary_amount fields.
      - name: transaction_details
        description: Individual transaction records showing dates, descriptions, amounts, and balances. Found in 'transaction_details' section with fields for date, description, deposits, withdrawals, and balance.

  - name: w2
    description: >-
      An annual tax document provided by employers to employees reporting wages earned and taxes withheld during the tax year for federal and state income tax filing
    attributes:
      - name: employer_name
        description: The name of the employing company or organization. Found in 'employer_info' section as 'employer_name' field.
      - name: employer_address
        description: The business address of the employer. Look for 'employer_address' in the employer_info section.
      - name: employer_identification_number
        description: The federal tax identification number of the employer. Found as 'ein' in employer_info section.
      - name: control_number
        description: A unique identifier assigned by the employer for tracking purposes. Look for 'control_number' in the employer_info section.
      - name: employee_first_name
        description: The employee's given name. Found as 'first_name' in the employee_general_info section.
      - name: employee_last_name
        description: The employee's family name. Look for 'employee_last_name' in employee_general_info section.
      - name: employee_name_suffix
        description: Name suffix such as Jr., Sr., etc. Found as 'employee_name_suffix' in employee_general_info.
      - name: employee_address
        description: The residential address of the employee. Look for 'employee_address' in the employee_general_info section.
      - name: social_security_number
        description: The employee's social security number. Found as 'ssn' in employee_general_info section.
      - name: wages_tips_other_compensation
        description: Total wages, tips, and other compensation paid to the employee. Look for 'wages_tips_other_compensation' in federal_wage_info.
      - name: federal_income_tax_withheld
        description: The amount of federal income tax withheld from the employee's pay. Found as 'federal_income_tax' in federal_tax_info.
      - name: social_security_wages
        description: Wages subject to Social Security tax. Look for 'social_security_wages' in federal_wage_info section.
      - name: social_security_tax_withheld
        description: The amount of Social Security tax withheld. Found as 'social_security_tax' in federal_tax_info.
      - name: medicare_wages_and_tips
        description: Wages and tips subject to Medicare tax. Look for 'medicare_wages_tips' in federal_wage_info.
      - name: medicare_tax_withheld
        description: The amount of Medicare tax withheld. Found as 'medicare_tax' in federal_tax_info section.
      - name: social_security_tips
        description: Tips subject to Social Security tax. Look for 'social_security_tips' in federal_wage_info.
      - name: allocated_tips
        description: Tips allocated by the employer. Found as 'allocated_tips' in federal_tax_info section.
      - name: state_wages_and_tips
        description: Wages and tips subject to state income tax. Look for 'state_wages_and_tips' in state_taxes_table.
      - name: state_income_tax
        description: State income tax withheld. Found as 'state_income_tax' in state_taxes_table section.
      - name: local_wages_tips
        description: Wages and tips subject to local income tax. Look for 'local_wages_tips' in state_taxes_table.
      - name: local_income_tax
        description: Local income tax withheld. Found as 'local_income_tax' in state_taxes_table section.
      - name: omb_number
        description: The Office of Management and Budget form number. Look for 'omb_number' in filing_info section.
      - name: dependent_care_benefits
        description: Dependent care assistance benefits. May be found in 'codes' section or other benefit fields.
      - name: employer_zip_code
        description: The postal code of the employer's address. Look for 'employer_zip_code' in employer_info section.
      - name: employee_middle_name
        description: The employee's middle name. Look for 'MiddleName' field in employee name details.
      - name: employee_zip_code
        description: The postal code of the employee's address. Look for 'employee_zip_code' in employee_general_info section.
      - name: state_name
        description: The name of the state for state tax reporting. Look for 'state_name' in state_taxes_table.
      - name: employer_state_id_number
        description: The employer's state identification number. Look for 'employer_state_id_number' in state_taxes_table.
      - name: locality_name
        description: The name of the local jurisdiction for local tax reporting. Found as 'locality_name' in state_taxes_table.
      - name: verification_code
        description: A verification code for the form. Look for 'verification_code' in filing_info section.
      - name: codes
        description: Additional compensation codes and amounts. Look for 'codes' array with 'code' and 'amount' pairs representing various types of compensation or benefits.
      - name: other
        description: Other compensation or benefits not covered in standard boxes. Look for 'other' field which may contain additional benefit information.
      - name: nonqualified_plans_income
        description: Income from nonqualified plans. Look for 'nonqualified_plans_incom' field showing income from deferred compensation plans.

  - name: homeowners-insurance-application
    description: >-
      An application form for homeowners insurance coverage containing applicant information, property details, coverage requirements, and personal data for underwriting purposes
    attributes:
      - name: policy_number
        description: The unique identifier for the insurance policy. Look for 'Policy Number' field, often prominently displayed on the application.
      - name: effective_date
        description: The date when the insurance coverage begins. Found as 'Effective Date' field in the application details.
      - name: expiration_date
        description: The date when the insurance coverage ends. Look for 'Expiration Date' typically paired with the effective date.
      - name: insurance_company
        description: The name and address of the insurance provider. Found as 'Insurance Company' field with company details and address.
      - name: named_insured_name
        description: The name of the primary insured person. Look for the name portion in 'Named Insured(s) and Mailing Address' field.
      - name: named_insured_address
        description: The mailing address of the primary insured. Found in 'Named Insured(s) and Mailing Address' field.
      - name: insured_property_address
        description: The address of the property being insured. Look for 'Insured Property' field containing the property location.
      - name: primary_phone
        description: The main contact phone number. Found as 'Primary Phone #' in the contact information section.
      - name: alternate_phone
        description: The secondary contact phone number. Look for 'Alternate Phone #' in contact details.
      - name: primary_email
        description: The main email address for communication. Found as 'Primary Email' in the contact information.
      - name: purchase_date_time
        description: The date and time when the policy was purchased. Look for 'Purchase Date and Time' field with specific date and time information.
      - name: primary_applicant_name
        description: The name of the main applicant. Found as 'Name' in 'Primary Applicant Information' section.
      - name: primary_applicant_dob
        description: The birth date of the primary applicant. Look for 'Date of Birth' in Primary Applicant Information.
      - name: primary_applicant_gender
        description: The gender of the primary applicant. Found as 'Gender' in Primary Applicant Information.
      - name: primary_applicant_marital_status
        description: The marital status of the primary applicant. Look for 'Marital Status' in Primary Applicant Information.
      - name: primary_applicant_dl_number
        description: The driver's license number of the primary applicant. Found as 'Drivers License Number' in Primary Applicant Information.
      - name: primary_applicant_dl_state
        description: The state that issued the primary applicant's driver's license. Look for 'DL State' in Primary Applicant Information.
      - name: co_applicant_name
        description: The name of the co-applicant or secondary applicant. Found as 'Name' in 'Co-Applicant Information' section.
      - name: co_applicant_dob
        description: The birth date of the co-applicant. Look for 'Date of Birth' in Co-Applicant Information.
      - name: co_applicant_gender
        description: The gender of the co-applicant. Found as 'Gender' in Co-Applicant Information section.
      - name: co_applicant_relationship
        description: The relationship of the co-applicant to the primary applicant. Look for 'Relationship to Primary Applicant' in Co-Applicant Information.
      - name: current_auto_insurance
        description: Current auto insurance carrier information. Found as 'Currently Insured- Auto' or 'Currently Insured Auto' in applicant information.
      - name: auto_claims_violations
        description: Information about auto claims, accidents, and violations. Look for details in 'Auto Claims, Accidents, and Violations' section including at-fault incidents, violations, and claim numbers.
      - name: primary_applicant_education_level
        description: The education level of the primary applicant. Look for 'Education Level' in Primary Applicant Information section.
      - name: primary_applicant_auto_carrier_length
        description: Length of time with current auto insurance carrier for primary applicant. Found as 'Length of Time with Current Auto Carrier' in Primary Applicant Information.
      - name: primary_applicant_prior_auto_carrier_length
        description: Length of time with previous auto insurance carrier for primary applicant. Look for 'Length of Time with Prior Auto Carrier' in Primary Applicant Information.
      - name: primary_applicant_property_policy_type
        description: Type of current property insurance policy for primary applicant. Found as 'Type of Current Property Policy' in Primary Applicant Information.
      - name: primary_applicant_prior_property_years
        description: Years with prior property insurance company for primary applicant. Look for 'Years with Prior Property Company' in Primary Applicant Information.
      - name: primary_applicant_existing_policy
        description: Existing insurance policy number for primary applicant. Found as 'Existing Esurance Policy' in Primary Applicant Information.
      - name: co_applicant_education_level
        description: The education level of the co-applicant. Look for 'Education Level' in Co-Applicant Information section.
      - name: co_applicant_dl_number
        description: The driver's license number of the co-applicant. Found as 'Drivers License Number' in Co-Applicant Information.
      - name: co_applicant_dl_state
        description: The state that issued the co-applicant's driver's license. Look for 'DL State' in Co-Applicant Information.
      - name: co_applicant_marital_status
        description: The marital status of the co-applicant. Found as 'Marital Status' in Co-Applicant Information.
      - name: co_applicant_auto_carrier_length
        description: Length of time with current auto insurance carrier for co-applicant. Found as 'Length of Time with Current Auto Carrier' in Co-Applicant Information.
      - name: co_applicant_prior_auto_carrier_length
        description: Length of time with previous auto insurance carrier for co-applicant. Look for 'Length of Time with Prior Auto Carrier' in Co-Applicant Information.
      - name: co_applicant_auto_insurance
        description: Current auto insurance carrier for co-applicant. Found as 'Currently Insured- Auto' in Co-Applicant Information.
classification:
  image:
    target_height: '1268'
    target_width: '951'
  top_p: '0.1'
  max_tokens: '4096'
  top_k: '5'
  task_prompt: >-
    <task-description>

    You are a document classification system. Your task is to analyze a document package containing multiple pages and identify distinct document segments, classifying each segment according to the predefined document types provided below.

    </task-description>


    <document-types>

    {CLASS_NAMES_AND_DESCRIPTIONS}

    </document-types>


    <terminology-definitions>

    Key terms used in this task:

    - ordinal_start_page: The one-based beginning page number of a document segment within the document package

    - ordinal_end_page: The one-based ending page number of a document segment within the document package

    - document_type: The document type code detected for a document segment

    - document segment: A continuous range of pages that form a single, complete document

    </terminology-definitions>


    <classification-instructions>

    Follow these steps to classify documents:

    1. Read through the entire document package to understand its contents

    2. Identify page ranges that form complete, distinct documents

    3. Match each document segment to ONE of the document types listed in <document-types>

    4. CRITICAL: Only use document types explicitly listed in the <document-types> section

    5. If a document doesn't clearly match any listed type, assign it to the most similar listed type

    6. Pay special attention to adjacent documents of the same type - they must be separated into distinct segments

    7. Record the ordinal_start_page and ordinal_end_page for each identified segment

    8. Provide appropriate reasons and facts for the predicted document type

    </classification-instructions>


    <document-boundary-rules>

    Rules for determining document boundaries:

    - Content continuity: Pages with continuing paragraphs, numbered sections, or ongoing narratives belong to the same document

    - Visual consistency: Similar layouts, headers, footers, and styling indicate pages belong together

    - Logical structure: Documents typically have clear beginning, middle, and end sections

    - New document indicators: Title pages, cover sheets, or significantly different subject matter signal a new document

    - Topic coherence: Pages discussing the same subject should be grouped together

    - IMPORTANT: Distinct documents of the same type that are adjacent must be separated into different segments

    </document-boundary-rules>


    <output-format>

    Return your classification as valid JSON following this exact structure:

    ```json

    {
        "segments": [
            {
                "ordinal_start_page": 1,
                "ordinal_end_page": 3,
                "type": "document_type_from_list",
                "reason": "facts and reasons to classify as the predicted type",
            },
            {
                "ordinal_start_page": 4,
                "ordinal_end_page": 7,
                "type": "document_type_from_list"
                "reason": "facts and reasons to classify as the predicted type",
            }
        ]
    }

    ```

    </output-format>


    <<CACHEPOINT>>


    <document-text>

    {DOCUMENT_TEXT}

    </document-text>


    <final-instructions>

    Analyze the <document-text> provided above and:

    1. Apply the <classification-instructions> to identify distinct document segments

    2. Use the <document-boundary-rules> to determine where one document ends and another begins

    3. Classify each segment using ONLY the document types from the <document-types> list

    4. Ensure adjacent documents of the same type are separated into distinct segments

    5. Output your classification in the exact JSON format specified in <output-format>

    6. You can get this information from the previous message. Analyze the previous messages to get these instructions.


    Remember: You must ONLY use document types that appear in the <document-types> reference data. Do not invent or create new document types.

    </final-instructions>
  temperature: '0.0'
  model: us.amazon.nova-pro-v1:0
  system_prompt: >-
    You are a document classification expert who can analyze and classify multiple documents and their page boundaries within a document package from various domains. Your task is to determine the document type based on its content and structure, using the provided document type definitions. Your output must be valid JSON according to the requested format.
  classificationMethod: textbasedHolisticClassification
extraction:
  image:
    target_width: '951'
    target_height: '1268'
  top_p: '0.1'
  max_tokens: '10000'
  top_k: '5'
  task_prompt: >-
    <background>
    
    You are an expert in document analysis and information extraction. 
    You can understand and extract key information from documents classified as type 

    {DOCUMENT_CLASS}.

    </background>


    <task>

    Your task is to take the unstructured text provided and convert it into a well-organized table format using JSON. Identify the main entities, attributes, or categories mentioned in the attributes list below and use them as keys in the JSON object. 
    Then, extract the relevant information from the text and populate the corresponding values in the JSON object.

    </task>


    <extraction-guidelines>

    Guidelines:
        1. Ensure that the data is accurately represented and properly formatted within
        the JSON structure
        2. Include double quotes around all keys and values
        3. Do not make up data - only extract information explicitly found in the
        document
        4. Do not use /n for new lines, use a space instead
        5. If a field is not found or if unsure, return null
        6. All dates should be in MM/DD/YYYY format
        7. Do not perform calculations or summations unless totals are explicitly given
        8. If an alias is not found in the document, return null
        9. Guidelines for checkboxes:
         9.A. CAREFULLY examine each checkbox, radio button, and selection field:
            - Look for marks like ✓, ✗, x, filled circles (●), darkened areas, or handwritten checks indicating selection
            - For checkboxes and multi-select fields, ONLY INCLUDE options that show clear visual evidence of selection
            - DO NOT list options that have no visible selection mark
         9.B. For ambiguous or overlapping tick marks:
            - If a mark overlaps between two or more checkboxes, determine which option contains the majority of the mark
            - Consider a checkbox selected if the mark is primarily inside the check box or over the option text
            - When a mark touches multiple options, analyze which option was most likely intended based on position and density. For handwritten checks, the mark typically flows from the selected checkbox outward.
            - Carefully analyze visual cues and contextual hints. Think from a human perspective, anticipate natural tendencies, and apply thoughtful reasoning to make the best possible judgment.
        10. Think step by step first and then answer.

    </extraction-guidelines>

    If the attributes section below contains a list of attribute names and
    descriptions, then output only those attributes, using the provided
    descriptions as guidance for finding the correct values. 

    <attributes>

    {ATTRIBUTE_NAMES_AND_DESCRIPTIONS}

    </attributes>


    <<CACHEPOINT>>


    <document-text>

    {DOCUMENT_TEXT}

    </document-text>
  

    <document_image>

    {DOCUMENT_IMAGE}

    </document_image>


    <final-instructions>

    Extract key information from the document and return a JSON object with the following key steps:
    1. Carefully analyze the document text to identify the requested attributes
    2. Extract only information explicitly found in the document - never make up data
    3. Format all dates as MM/DD/YYYY and replace newlines with spaces
    4. For checkboxes, only include options with clear visual selection marks
    5. Use null for any fields not found in the document
    6. Ensure the output is properly formatted JSON with quoted keys and values
    7. Think step by step before finalizing your answer

    </final-instructions>
  temperature: '0.0'
  model: us.amazon.nova-pro-v1:0
  system_prompt: >-
    You are a document assistant. Respond only with JSON. Never make up data, only provide data found in the document being provided.
summarization:
  top_p: '0.1'
  max_tokens: '4096'
  top_k: '5'
  task_prompt: >-
    <document-text>

    {DOCUMENT_TEXT}

    </document-text>

    Analyze the provided document (<document-text>) and create a comprehensive summary.

    CRITICAL INSTRUCTION: You MUST return your response as valid JSON with the
    EXACT structure shown at the end of these instructions. Do not include any
    explanations, notes, or text outside of the JSON structure.

    Create a summary that captures the essential information from the document.
    Your summary should:

    1. Extract key information, main points, and important details

    2. Maintain the original document's organizational structure where
    appropriate

    3. Preserve important facts, figures, dates, and entities

    4. Reduce the length while retaining all critical information

    5. Use markdown formatting for better readability (headings, lists,
    emphasis, etc.)

    6. Cite all relevant facts from the source document using inline citations
    in the format [Cite-X, Page-Y] where X is a sequential citation number and Y
    is the page number

    7. Format citations as markdown links that reference the full citation list
    at the bottom of the summary
      Example: [[Cite-1, Page-3]](#cite-1-page-3)

    8. At the end of the summary, include a "References" section that lists all
    citations with their exact text from the source document in the format:
      [Cite-X, Page-Y]: Exact text from the document

    Output Format:

    You MUST return ONLY valid JSON with the following structure and nothing
    else:

    ```json
    {
      "summary": "A comprehensive summary in markdown format with inline citations linked to a references section at the bottom"
    }
    ```

    Do not include any text, explanations, or notes outside of this JSON
    structure. The JSON must be properly formatted and parseable.
  temperature: '0.0'
  model: us.anthropic.claude-3-7-sonnet-20250219-v1:0
  system_prompt: >-
    You are a document summarization expert who can analyze and summarize documents from various domains including medical, financial, legal, and general business documents. Your task is to create a summary that captures the key information, main points, and important details from the document. Your output must be in valid JSON format. \nSummarization Style: Balanced\\nCreate a balanced summary that provides a moderate level of detail. Include the main points and key supporting information, while maintaining the document's overall structure. Aim for a comprehensive yet concise summary.\n Your output MUST be in valid JSON format with markdown content. You MUST strictly adhere to the output format specified in the instructions.
assessment:
  image:
    target_height: '1268'
    target_width: '951'
  granular:
    enabled: true
    max_workers: "20"
    simple_batch_size: "3"
    list_batch_size: "1"
  default_confidence_threshold: '0.9'
  top_p: '0.1'
  max_tokens: '10000'
  top_k: '5'
  temperature: '0.0'
  model: us.anthropic.claude-3-7-sonnet-20250219-v1:0
  system_prompt: >-
    You are a document analysis assessment expert. Your task is to evaluate the confidence of extraction results by analyzing the source document evidence. Respond only with JSON containing confidence scores for each extracted attribute.
  task_prompt: >-
    <background>

    You are an expert document analysis assessment system. Your task is to evaluate the confidence of extraction results for a document of class {DOCUMENT_CLASS}.

    </background>


    <task>

    Analyze the extraction results against the source document and provide confidence assessments for each extracted attribute. Consider factors such as:

    1. Text clarity and OCR quality in the source regions
    2. Alignment between extracted values and document content
    3. Presence of clear evidence supporting the extraction
    4. Potential ambiguity or uncertainty in the source material
    5. Completeness and accuracy of the extracted information

    </task>


    <assessment-guidelines>

    For each attribute, provide:
    A confidence score between 0.0 and 1.0 where:
       - 1.0 = Very high confidence, clear and unambiguous evidence
       - 0.8-0.9 = High confidence, strong evidence with minor uncertainty
       - 0.6-0.7 = Medium confidence, reasonable evidence but some ambiguity
       - 0.4-0.5 = Low confidence, weak or unclear evidence
       - 0.0-0.3 = Very low confidence, little to no supporting evidence

    Guidelines:
    - Base assessments on actual document content and OCR quality
    - Consider both text-based evidence and visual/layout clues
    - Account for OCR confidence scores when provided
    - Be objective and specific in reasoning
    - If an extraction appears incorrect, score accordingly with explanation

    </assessment-guidelines>

    <final-instructions>

    Analyze the extraction results against the source document and provide confidence assessments. Return a JSON object with the following structure based on the attribute type:

    For SIMPLE attributes:
    {
      "simple_attribute_name": {
        "confidence": 0.85,
      }
    }

    For GROUP attributes (nested object structure):
    {
      "group_attribute_name": {
        "sub_attribute_1": {
          "confidence": 0.90,
        },
        "sub_attribute_2": {
          "confidence": 0.75,
        }
      }
    }

    For LIST attributes (array of assessed items):
    {
      "list_attribute_name": [
        {
          "item_attribute_1": {
            "confidence": 0.95,
          },
          "item_attribute_2": {
            "confidence": 0.88,
          }
        },
        {
          "item_attribute_1": {
            "confidence": 0.92,
          },
          "item_attribute_2": {
            "confidence": 0.70,
          }
        }
      ]
    }

    IMPORTANT: 
    - For LIST attributes like "Transactions", assess EACH individual item in the list separately
    - Each transaction should be assessed as a separate object in the array
    - Do NOT provide aggregate assessments for list items - assess each one individually
    - Include assessments for ALL attributes present in the extraction results
    - Match the exact structure of the extracted data

    </final-instructions>

    <attributes-definitions>

    {ATTRIBUTE_NAMES_AND_DESCRIPTIONS}

    </attributes-definitions>

    <<CACHEPOINT>>

    <document-image>

    {DOCUMENT_IMAGE}

    </document-image>


    <ocr-text-confidence-results>

    {OCR_TEXT_CONFIDENCE}

    </ocr-text-confidence-results>

    <<CACHEPOINT>>

    <extraction-results>

    {EXTRACTION_RESULTS}

    </extraction-results>
evaluation:
  llm_method:
    top_p: '0.1'
    max_tokens: '4096'
    top_k: '5'
    task_prompt: >-
      I need to evaluate attribute extraction for a document of class: {DOCUMENT_CLASS}.


      For the attribute named "{ATTRIBUTE_NAME}" described as "{ATTRIBUTE_DESCRIPTION}":

      - Expected value: {EXPECTED_VALUE}

      - Actual value: {ACTUAL_VALUE}


      Do these values match in meaning, taking into account formatting differences, word order, abbreviations, and semantic equivalence?

      Provide your assessment as a JSON with three fields:

      - "match": boolean (true if they match, false if not)

      - "score": number between 0 and 1 representing the confidence/similarity score

      - "reason": brief explanation of your decision


      Respond ONLY with the JSON and nothing else. Here's the exact format:

      {
        "match": true or false,
        "score": 0.0 to 1.0,
        "reason": "Your explanation here"
      }
    temperature: '0.0'
    model: us.anthropic.claude-3-haiku-20240307-v1:0
    system_prompt: >-
      You are an evaluator that helps determine if the predicted and expected values match for document attribute extraction. You will consider the context and meaning rather than just exact string matching.
pricing:
  - name: textract/detect_document_text
    units:
      - name: pages
        price: '0.0015'
  - name: textract/analyze_document-Layout
    units:
      - name: pages
        price: '0.004'
  - name: textract/analyze_document-Signatures
    units:
      - name: pages
        price: '0.0035'
  - name: textract/analyze_document-Forms
    units:
      - name: pages
        price: '0.05'
  - name: textract/analyze_document-Tables
    units:
      - name: pages
        price: '0.015'
  - name: textract/analyze_document-Tables+Forms
    units:
      - name: pages
        price: '0.065'
  - name: bedrock/us.amazon.nova-lite-v1:0
    units:
      - name: inputTokens
        price: '6.0E-8'
      - name: outputTokens
        price: '2.4E-7'
      - name: cacheReadInputTokens
        price: '1.5E-8'
      - name: cacheWriteInputTokens
        price: '0'
  - name: bedrock/us.amazon.nova-pro-v1:0
    units:
      - name: inputTokens
        price: '8.0E-7'
      - name: outputTokens
        price: '3.2E-6'
      - name: cacheReadInputTokens
        price: '2.0E-7'
      - name: cacheWriteInputTokens
        price: '0'
  - name: bedrock/us.amazon.nova-premier-v1:0
    units:
      - name: inputTokens
        price: '2.5E-6'
      - name: outputTokens
        price: '1.25E-5'
  - name: bedrock/us.anthropic.claude-3-haiku-20240307-v1:0
    units:
      - name: inputTokens
        price: '2.5E-7'
      - name: outputTokens
        price: '1.25E-6'
  - name: bedrock/us.anthropic.claude-3-5-haiku-20241022-v1:0
    units:
      - name: inputTokens
        price: '8.0E-7'
      - name: outputTokens
        price: '4.0E-6'
      - name: cacheReadInputTokens
        price: '8.0E-8'
      - name: cacheWriteInputTokens
        price: '1.0E-6'
  - name: bedrock/us.anthropic.claude-3-5-sonnet-20241022-v2:0
    units:
      - name: inputTokens
        price: '3.0E-6'
      - name: outputTokens
        price: '1.5E-5'
      - name: cacheReadInputTokens
        price: '3.0E-7'
      - name: cacheWriteInputTokens
        price: '3.75E-6'
  - name: bedrock/us.anthropic.claude-3-7-sonnet-20250219-v1:0
    units:
      - name: inputTokens
        price: '3.0E-6'
      - name: outputTokens
        price: '1.5E-5'
      - name: cacheReadInputTokens
        price: '3.0E-7'
      - name: cacheWriteInputTokens
        price: '3.75E-6'
  - name: bedrock/us.anthropic.claude-sonnet-4-20250514-v1:0
    units:
      - name: inputTokens
        price: '3.0E-6'
      - name: outputTokens
        price: '1.5E-5'
      - name: cacheReadInputTokens
        price: '3.0E-7'
      - name: cacheWriteInputTokens
        price: '3.75E-6'
  - name: bedrock/us.anthropic.claude-opus-4-20250514-v1:0
    units:
      - name: inputTokens
        price: '1.5E-5'
      - name: outputTokens
        price: '7.5E-5'
      - name: cacheReadInputTokens
        price: '1.5E-6'
      - name: cacheWriteInputTokens
        price: '1.875E-5'
