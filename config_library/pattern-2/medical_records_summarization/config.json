{
  "classification": {
    "temperature": "0",
    "model": "us.anthropic.claude-3-5-sonnet-20241022-v2:0",
    "system_prompt": "You are a document classification system that analyzes business documents, forms, and publications. Your sole task is to classify documents into categories based on their visual layout and textual content. You must:\n\n1. Output only a JSON object containing a single \"class\" field with the classification label\n2. Use exactly one of the predefined categories, using the exact spelling and case provided\n3. Never include explanations, reasoning, or additional text in your response\n4. Respond with nothing but the JSON containing the classification\n\nExample correct response:\n{\"class\": \"letter\"}\n",
    "classificationMethod": "multimodalPageLevelClassification",
    "top_k": "200",
    "task_prompt": "Classify this document into exactly one of these categories:\n\n{CLASS_NAMES_AND_DESCRIPTIONS}\n\nRespond only with a JSON object containing the class label. For example: {{\"class\": \"letter\"}}\n\n<document_ocr_data>\n{DOCUMENT_TEXT}\n</document_ocr_data>\n"
  },
  "notes": "Default settings",
  "classes": [
    {
      "name": "Visit Summary",
      "description": "Documentation of a specific healthcare visit including reason for visit, findings, and treatment plans",
      "attributes": [
        {
          "name": "patient_name",
          "description": "The full name of the patient seen during the encounter"
        },
        {
          "name": "encounter_date",
          "description": "The date and time when the healthcare encounter occurred"
        },
        {
          "name": "encounter_type",
          "description": "The category of visit such as office visit, emergency, telephone encounter, etc."
        },
        {
          "name": "reason_for_visit",
          "description": "The chief complaint or primary reason the patient sought care"
        },
        {
          "name": "provider_name",
          "description": "The name of the healthcare provider who conducted the encounter"
        },
        {
          "name": "diagnoses",
          "description": "Medical conditions identified during the encounter"
        },
        {
          "name": "plan",
          "description": "Next steps for managing the patient's condition including treatments or follow-up"
        },
        {
          "name": "custodian_organization",
          "description": "The healthcare organization responsible for maintaining the document"
        },
        {
          "name": "patient_demographics",
          "description": "Basic information about the patient including date of birth, sex, address, and contact information"
        },
        {
          "name": "allergies",
          "description": "List of substances to which the patient has known allergies or adverse reactions, including severity and symptoms"
        },
        {
          "name": "medications",
          "description": "Current medications prescribed to the patient including dosage, frequency, and status"
        }
      ]
    },
    {
      "name": "Medical History",
      "description": "A medical document that records a patient's health history and findings from a physical examination",
      "attributes": [
        {
          "name": "patient_name",
          "description": "The full name of the patient who was examined"
        },
        {
          "name": "patient_date_of_birth",
          "description": "The patient's birth date, typically in a month/day/year format"
        },
        {
          "name": "encounter_date",
          "description": "The date when the physical examination occurred"
        },
        {
          "name": "vital_signs",
          "description": "Measurements of essential body functions like blood pressure, pulse, and temperature"
        },
        {
          "name": "physical_findings",
          "description": "Details of observations and results from the physical examination"
        },
        {
          "name": "medical_history",
          "description": "Summary of the patient's past medical conditions and treatments"
        },
        {
          "name": "assessment",
          "description": "The provider's evaluation and interpretation of the patient's condition"
        }
      ]
    },
    {
      "name": "Medical Diagnoses",
      "description": "A focused medical document that lists a patient's current medical problems or diagnoses",
      "attributes": [
        {
          "name": "patient_name",
          "description": "The full name of the patient whose problems are listed"
        },
        {
          "name": "document_date",
          "description": "The date when the problem list was created or updated"
        },
        {
          "name": "problems",
          "description": "List of medical conditions, diagnoses, or concerns affecting the patient"
        },
        {
          "name": "provider_name",
          "description": "The healthcare provider responsible for maintaining the problem list"
        },
        {
          "name": "signature_info",
          "description": "Details about who electronically signed the document and when"
        }
      ]
    },
    {
      "name": "Test Results",
      "description": "A medical document containing results from laboratory tests or diagnostic procedures",
      "attributes": [
        {
          "name": "patient_name",
          "description": "The full name of the patient whose test results are reported"
        },
        {
          "name": "test_date",
          "description": "The date when the test was performed"
        },
        {
          "name": "test_name",
          "description": "The specific name or type of test performed"
        },
        {
          "name": "result_value",
          "description": "The actual findings or measurements from the test"
        },
        {
          "name": "reference_range",
          "description": "The normal or expected range for test results"
        },
        {
          "name": "abnormal_flags",
          "description": "Indicators that highlight results outside normal ranges"
        },
        {
          "name": "status",
          "description": "Whether the result is preliminary, final, or amended"
        }
      ]
    },
    {
      "name": "Televisit",
      "description": "Documentation of a healthcare interaction conducted over the telephone rather than in person",
      "attributes": [
        {
          "name": "patient_name",
          "description": "The full name of the patient involved in the telephone encounter"
        },
        {
          "name": "encounter_date",
          "description": "The date and time when the telephone communication occurred"
        },
        {
          "name": "provider_name",
          "description": "The name of the healthcare provider who conducted the telephone encounter"
        },
        {
          "name": "reason_for_call",
          "description": "The main issue or concern that prompted the telephone communication"
        },
        {
          "name": "note_content",
          "description": "Documentation of the conversation, including complaints and advice given"
        },
        {
          "name": "signature_info",
          "description": "Details about who electronically signed the note and when"
        }
      ]
    }
  ],
  "extraction": {
    "temperature": "0",
    "model": "us.anthropic.claude-3-5-sonnet-20241022-v2:0",
    "system_prompt": "You are a document assistant. Respond only with JSON. Never make up data, only provide data found in the document being provided.\n",
    "top_k": "200",
    "task_prompt": "<background>\nYou are an expert in business document analysis and information extraction. \nYou can understand and extract key information from business documents classified as type \n{DOCUMENT_CLASS}.\n</background>\n<document_ocr_data>\n{DOCUMENT_TEXT}\n</document_ocr_data>\n<task>\nYour task is to take the unstructured text provided and convert it into a well-organized table format using JSON. Identify the main entities, attributes, or categories mentioned in the attributes list below and use them as keys in the JSON object. \nThen, extract the relevant information from the text and populate the corresponding values in the JSON object. \nGuidelines:\nEnsure that the data is accurately represented and properly formatted within the JSON structure\nInclude double quotes around all keys and values\nDo not make up data - only extract information explicitly found in the document\nDo not use /n for new lines, use a space instead\nIf a field is not found or if unsure, return null\nAll dates should be in MM/DD/YYYY format\nDo not perform calculations or summations unless totals are explicitly given\nIf an alias is not found in the document, return null\nHere are the attributes you should extract:\n<attributes>\n{ATTRIBUTE_NAMES_AND_DESCRIPTIONS}\n</attributes>\n</task>\n"
  },
  "pricing": [
    {
      "name": "textract/detect_document_text",
      "units": [
        {
          "name": "pages",
          "price": "0.0015"
        }
      ]
    },
    {
      "name": "textract/analyze_document-Layout",
      "units": [
        {
          "name": "pages",
          "price": "0.004"
        }
      ]
    },
    {
      "name": "textract/analyze_document-Signatures",
      "units": [
        {
          "name": "pages",
          "price": "0.0035"
        }
      ]
    },
    {
      "name": "textract/analyze_document-Forms",
      "units": [
        {
          "name": "pages",
          "price": "0.05"
        }
      ]
    },
    {
      "name": "textract/analyze_document-Tables",
      "units": [
        {
          "name": "pages",
          "price": "0.015"
        }
      ]
    },
    {
      "name": "textract/analyze_document-Tables+Forms",
      "units": [
        {
          "name": "pages",
          "price": "0.065"
        }
      ]
    },
    {
      "name": "bedrock/us.amazon.nova-lite-v1:0",
      "units": [
        {
          "name": "inputTokens",
          "price": "6.0E-8"
        },
        {
          "name": "outputTokens",
          "price": "2.4E-7"
        }
      ]
    },
    {
      "name": "bedrock/us.amazon.nova-pro-v1:0",
      "units": [
        {
          "name": "inputTokens",
          "price": "8.0E-7"
        },
        {
          "name": "outputTokens",
          "price": "3.2E-6"
        }
      ]
    },
    {
      "name": "bedrock/us.anthropic.claude-3-haiku-20240307-v1:0",
      "units": [
        {
          "name": "inputTokens",
          "price": "2.5E-7"
        },
        {
          "name": "outputTokens",
          "price": "1.25E-6"
        }
      ]
    },
    {
      "name": "bedrock/us.anthropic.claude-3-5-haiku-20241022-v1:0",
      "units": [
        {
          "name": "inputTokens",
          "price": "8.0E-7"
        },
        {
          "name": "outputTokens",
          "price": "4.0E-6"
        },
        {
          "name": "cacheReadInputTokens",
          "price": "8.0E-8"
        },
        {
          "name": "cacheWriteInputTokens",
          "price": "1.0E-6"
        }
      ]
    },
    {
      "name": "bedrock/us.anthropic.claude-3-5-sonnet-20241022-v2:0",
      "units": [
        {
          "name": "inputTokens",
          "price": "3.0E-6"
        },
        {
          "name": "outputTokens",
          "price": "1.5E-5"
        },
        {
          "name": "cacheReadInputTokens",
          "price": "3.0E-7"
        },
        {
          "name": "cacheWriteInputTokens",
          "price": "3.75E-6"
        }
      ]
    },
    {
      "name": "bedrock/us.anthropic.claude-3-7-sonnet-20250219-v1:0",
      "units": [
        {
          "name": "inputTokens",
          "price": "3.0E-6"
        },
        {
          "name": "outputTokens",
          "price": "1.5E-5"
        },
        {
          "name": "cacheReadInputTokens",
          "price": "3.0E-7"
        },
        {
          "name": "cacheWriteInputTokens",
          "price": "3.75E-6"
        }
      ]
    }
  ],
  "evaluation": {
    "llm_method": {
      "temperature": "0.0",
      "model": "us.anthropic.claude-3-5-sonnet-20241022-v2:0",
      "system_prompt": "You are an evaluator that helps determine if the predicted and expected values match for document attribute extraction. You will consider the context and meaning rather than just exact string matching.\n",
      "top_k": "250",
      "task_prompt": "I need to evaluate attribute extraction for a document of class: {DOCUMENT_CLASS}.\n\nFor the attribute named \"{ATTRIBUTE_NAME}\" described as \"{ATTRIBUTE_DESCRIPTION}\":\n- Expected value: {EXPECTED_VALUE}\n- Actual value: {ACTUAL_VALUE}\n\nDo these values match in meaning, taking into account formatting differences, word order, abbreviations, and semantic equivalence?\nProvide your assessment as a JSON with three fields:\n- \"match\": boolean (true if they match, false if not)\n- \"score\": number between 0 and 1 representing the confidence/similarity score\n- \"reason\": brief explanation of your decision\n\nRespond ONLY with the JSON and nothing else. Here's the exact format:\n{\n  \"match\": true or false,\n  \"score\": 0.0 to 1.0,\n  \"reason\": \"Your explanation here\"\n}\n"
    }
  },
  "summarization": {
    "temperature": "0.0",
    "model": "us.anthropic.claude-3-5-sonnet-20241022-v2:0",
    "system_prompt": "You are a document summarization expert who can analyze and summarize documents from various domains including medical, financial, legal, and general business documents. Your task is to create a summary that captures the key information, main points, and important details from the document. Your output must be in valid JSON format. \nSummarization Style: Balanced\\nCreate a balanced summary that provides a moderate level of detail. Include the main points and key supporting information, while maintaining the document's overall structure. Aim for a comprehensive yet concise summary.\n Your output MUST be in valid JSON format with markdown content. You MUST strictly adhere to the output format specified in the instructions.",
    "top_k": "250",
    "task_prompt": "Analyze the provided document and create a comprehensive medical summary.\n\n<document>\n{DOCUMENT_TEXT}\n</document>\n\n## CRITICAL INSTRUCTION\nYou MUST return your response as valid JSON with the EXACT structure shown at the end of these instructions. Do not include any explanations, notes, or text outside of the JSON structure.\n\n## Summary Requirements\nCreate a detailed medical summary that captures all essential information from the document. Your summary should:\n\n1. Use markdown format with clear section headings and color-coded sections\n2. Implement hyperlinks to relevant sections of the original source document\n3. Create hover functionality for details using HTML span tags with title attributes that contain the exact source text from the document\n   Example: <span title=\"Patient has been diagnosed with Hypertension since 2020 and is currently managed with Lisinopril 20mg daily.\" class=\"citation\">[Page 3]</span>\n4. Enrich medical conditions with appropriate medical codes when possible\n5. Deduplicate repeated information while preserving access to all instances\n6. Clearly mark any information that could not be properly interpreted\n7. Ensure the summary can be easily copied and pasted\n\n## Required Sections\n\n### 1. Patient Snapshot\nProvide a brief overview of the patient's key health information.\n\n### 2. Healthcare Providers\nList all providers with their complete information, organized by impairment and encounter.\n\n### 3. Impairments & Health Status\nGroup by medical category (cardiology, endocrinology, etc.), including symptoms and complaints.\n\n### 4. Encounters\nList in chronological order (newest first) with encounter types clearly identified (Office Visit, Tele-Health, In-Patient, Emergency Room, etc.).\n\n### 5. Medications\nSeparate current medications from discontinued medications, linked to relevant impairments and encounters.\n\n### 6. Laboratory Results\nOrganize all lab results with links to associated conditions and encounters.\n\n### 7. Clinical Testing\nDocument all non-laboratory tests, procedures and imaging, linked to relevant encounters and conditions.\n\n### 8. Age-Related Screening\nFor patients over 45, highlight results for: Colonoscopy, EKG, Mammograms, Pap Results, PSA Testing.\n\n### 9. Administrative Forms\nIdentify all administrative documentation.\n\n### 10. Health Metrics Trending\nInclude trend information for: height, weight, BMI, blood pressure, A1c values, cholesterol results, liver function tests, and kidney function tests.\n\n## Citation Requirements\nCite all relevant facts from the source document using the prettified markdown format [Page-Y] where Y is the page number. Hover citations should include the exact text from the document from which the information was retrieved.\n\n## Output Format\nYou MUST return ONLY valid JSON with the following structure and nothing else:\n\n```json\n{\n  \"summary\": \"A comprehensive medical summary in markdown format with citations and hover functionality\"\n}\n```\nDo not include any text, explanations, or notes outside of this JSON structure. The JSON must be properly formatted and parseable."
  },
  "ocr": {
    "features": [
      {
        "name": "LAYOUT"
      }
    ]
  }
}
