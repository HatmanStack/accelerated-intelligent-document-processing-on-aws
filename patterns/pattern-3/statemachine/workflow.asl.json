{
    "Comment": "Data Automation Async Workflow",
    "StartAt": "InvokeDataAutomation",
    "States": {
      "InvokeDataAutomation": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
        "Parameters": {
          "FunctionName": "${InvokeBDALambdaArn}",
          "Payload": {
            "taskToken.$": "$$.Task.Token",
            "execution_arn.$": "$$.Execution.Id",
            "working_bucket": "${WorkingBucket}",
            "BDAProjectArn": "${BDAProjectArn}",
            "input.$": "$"
          }
        },
        "ResultPath": "$.BDAResponse",
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException",
              "ServiceQuotaExceededException",
              "ThrottlingException",
              "ProvisionedThroughputExceededException",
              "RequestLimitExceeded"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 10,
            "BackoffRate": 2
          }
        ],
        "Next": "CheckCompletionStatus"
      },
      "CheckCompletionStatus": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.BDAResponse.status",
            "StringEquals": "COMPLETED",
            "Next": "ProcessResults"
          },
          {
            "Variable": "$.BDAResponse.status",
            "StringEquals": "FAILED",
            "Next": "FailState"
          }
        ]
      },
      "ProcessResults": {
        "Type": "Task",
        "Resource": "${ProcessResultsLambdaArn}",
        "Parameters": {
          "execution_arn.$": "$$.Execution.Id",
          "BDAResponse.$": "$.BDAResponse",
          "output_bucket": "${OutputBucket}"
        },
        "End": true
      },
      "FailState": {
        "Type": "Fail",
        "Cause": "Data Automation Job Failed",
        "Error": "JobFailedException"
      }
    }
  }