[
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-001",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Elevation of Privilege",
    "severity": "High",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "LambdaExecutionRole",
    "title": "Overly Permissive IAM Role Policy",
    "issue": "The LambdaExecutionRole policy grants wildcard (*) resource access to multiple Bedrock actions, violating the principle of least privilege. This allows the Lambda function to access any Bedrock project or blueprint in the account, not just those it needs.",
    "attack_vector": "If the Lambda function is compromised, an attacker could leverage these broad permissions to access, modify, or delete any Bedrock Data Automation project or blueprint in the account.",
    "impact": "Potential unauthorized access to all Bedrock resources in the account, possible data exfiltration, and violation of least privilege security principle.",
    "remediation": "Scope down the IAM policy to specific resources by replacing the wildcard (*) with specific ARNs for the resources the Lambda needs to access. For example, use project-specific ARNs for the Bedrock resources.",
    "priority": 1,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16", "AWS Well-Architected Framework - Security Pillar"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-002",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Lambda Function Using Pre-Built Package Without Integrity Verification",
    "issue": "The Lambda function uses a pre-built package from an S3 bucket without any apparent integrity verification mechanism. The package could potentially be tampered with if the S3 bucket is compromised.",
    "attack_vector": "If an attacker gains access to the S3 bucket containing the Lambda code package, they could modify it to include malicious code that would execute with the permissions of the Lambda role.",
    "impact": "Execution of unauthorized code that could manipulate Bedrock Data Automation projects and potentially access sensitive financial documents being processed.",
    "remediation": "Implement code signing for Lambda functions using AWS Signer and validate the code signatures during deployment. Additionally, consider using versioned S3 objects with object lock to prevent tampering with the Lambda package.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-345",
    "compliance_violations": ["AWS Well-Architected Framework - Security Pillar"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-003",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Insufficient Audit Trail for Bedrock Operations",
    "issue": "While the Lambda has basic execution role logging, there's no explicit configuration for detailed auditing of Bedrock Data Automation operations performed by the custom resource.",
    "attack_vector": "An attacker who compromises the Lambda function could perform unauthorized actions on Bedrock resources without leaving sufficient audit trails to trace their activities.",
    "impact": "Difficulty in detecting malicious activities, investigating security incidents, and maintaining compliance with financial regulations for document processing systems.",
    "remediation": "Enable AWS CloudTrail data events for Bedrock API calls. Implement additional application-level logging within the Lambda function that captures detailed information about all Bedrock operations and their outcomes.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-778",
    "compliance_violations": ["SOC 2", "FFIEC Cybersecurity Assessment"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/security-logging-and-monitoring.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-004",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Denial of Service",
    "severity": "Low",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Missing Concurrency Limits on Lambda Function",
    "issue": "The BDAProjectLambda function explicitly suppresses the W92 warning about missing concurrency limits. Without these limits, the function could potentially consume all available Lambda concurrency in the account during a deployment spike or if triggered repeatedly.",
    "attack_vector": "An attacker could repeatedly invoke the function (if they gain access to trigger it) to deplete account Lambda concurrency limits, affecting other services in the account.",
    "impact": "Potential disruption to other Lambda functions in the account, affecting availability of related services.",
    "remediation": "Implement reserved concurrency limits on the Lambda function to ensure it only uses a reasonable portion of the account's total concurrency. Monitor Lambda throttling metrics to detect abnormal invocation patterns.",
    "priority": 3,
    "estimated_effort": "Low",
    "cwe_id": "CWE-400",
    "compliance_violations": ["AWS Well-Architected Framework - Reliability Pillar"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-005",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "Custom::BDAProject",
    "resource_name": "BDAProject",
    "title": "Sensitive Document Processing Without Explicit Security Controls",
    "issue": "The template creates a Bedrock Data Automation project that processes sensitive financial documents (Bank Statements, Payslips, Driver Licenses, etc.) but doesn't explicitly define security controls for data protection during processing.",
    "attack_vector": "If the Bedrock Data Automation infrastructure is misconfigured or compromised, sensitive personal and financial information from processed documents could be exposed.",
    "impact": "Potential exposure of personally identifiable information (PII) and financial data, violating privacy regulations and potentially causing financial harm to customers.",
    "remediation": "Implement encryption for data at rest and in transit for all Bedrock resources. Add resource policies to restrict access to processed documents. Implement data classification and access controls specific to document types being processed. Consider implementing DLP (Data Loss Prevention) mechanisms.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-312",
    "compliance_violations": ["GDPR", "CCPA", "GLBA"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/security.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-006",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Spoofing",
    "severity": "Low",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Lambda Function Without VPC Isolation",
    "issue": "The BDAProjectLambda function explicitly suppresses the W89 warning about not requiring VPC access. This means the function runs outside a VPC, potentially increasing its attack surface and accessibility.",
    "attack_vector": "While the function only interacts with AWS APIs, running outside a VPC means that if the function were compromised, an attacker would have direct internet access from the function execution environment.",
    "impact": "Increased attack surface and potential for data exfiltration if the function is compromised.",
    "remediation": "Consider deploying the Lambda function within a VPC with appropriate security groups and NACLs to restrict outbound traffic to only what's necessary. Use VPC endpoints for AWS services the function needs to access.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-284",
    "compliance_violations": ["AWS Well-Architected Framework - Security Pillar"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html"],
    "status": "Open"
  }
]