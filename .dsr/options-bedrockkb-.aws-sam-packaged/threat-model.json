[
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-001",
    "stack": "bedrockknowledgebase",
    "stride_category": "Elevation of Privilege",
    "severity": "High",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "OpenSearchLambdaExecutionRole",
    "title": "Overly permissive IAM permissions",
    "issue": "The OpenSearchLambdaExecutionRole has overly broad permissions for S3 access, allowing actions like PutObject*, GetObject*, and DeleteObject* on all S3 buckets in the account ('arn:aws:s3:::*') rather than limiting to specific buckets needed for the application.",
    "attack_vector": "If the Lambda function is compromised, an attacker could leverage these permissions to access, modify, or delete objects in any S3 bucket in the account.",
    "impact": "Potential unauthorized access to all S3 buckets in the account, resulting in data loss, modification, or exfiltration beyond the scope needed for the application.",
    "remediation": "Restrict S3 permissions to specific buckets required for the application functionality. Update the S3 resource scope from 'arn:aws:s3:::*' to the specific buckets needed.",
    "priority": 1,
    "estimated_effort": "Low",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16", "NIST 800-53 AC-6"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-002",
    "stack": "bedrockknowledgebase",
    "stride_category": "Elevation of Privilege",
    "severity": "Medium",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "OpenSearchLambdaExecutionRole",
    "title": "Broad permissions for OpenSearch Serverless actions",
    "issue": "The OpenSearchLambdaExecutionRole has broad permissions for OpenSearch Serverless administration actions (create, list, update policies) on all resources (*) rather than being limited to specific collections.",
    "attack_vector": "If the Lambda function is compromised, an attacker could create or modify OpenSearch collections and security policies across the account.",
    "impact": "Potential for unauthorized creation or modification of OpenSearch Serverless resources leading to data exposure or service disruption.",
    "remediation": "Scope down permissions to specific OpenSearch Serverless collections and actions required for the application functionality. Replace wildcard resource patterns with specific ARNs.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16", "NIST 800-53 AC-6"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-003",
    "stack": "bedrockknowledgebase",
    "stride_category": "Information Disclosure",
    "severity": "High",
    "resource_type": "AWS::OpenSearchServerless::NetworkPolicy",
    "resource_name": "OSSNetworkPolicy",
    "title": "Public access enabled for OpenSearch Serverless collection",
    "issue": "The OpenSearch Serverless network policy allows public access to both the collection and its dashboard with 'AllowFromPublic: true', creating potential exposure of sensitive data.",
    "attack_vector": "Unauthorized users from the internet could potentially access the OpenSearch collection or dashboard if authentication mechanisms are compromised or misconfigured.",
    "impact": "Potential unauthorized access to indexed data, including sensitive information stored in the knowledge base.",
    "remediation": "Restrict access to the OpenSearch Serverless collection to specific VPC endpoints, IP ranges, or AWS services instead of allowing public access. Set 'AllowFromPublic: false' and implement a more restrictive access policy.",
    "priority": 1,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-284",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.20", "NIST 800-53 AC-3"],
    "references": ["https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-004",
    "stack": "bedrockknowledgebase",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "AWS::OpenSearchServerless::Collection",
    "resource_name": "OSSCollection",
    "title": "Default encryption with AWS owned keys",
    "issue": "The OpenSearch Serverless collection uses AWS owned keys for encryption (AWSOwnedKey: true) rather than customer managed keys, reducing control over encryption and key rotation.",
    "attack_vector": "In case of a compromise of AWS managed keys, the customer has no visibility or control over the encryption and cannot immediately revoke access.",
    "impact": "Reduced control over data encryption and inability to implement custom key management strategies (rotation, revocation) for sensitive data.",
    "remediation": "Use a customer-managed KMS key for encrypting the OpenSearch Serverless collection to gain better control and auditability. Update the encryption policy to specify a customer-managed KMS key ARN instead of using AWS owned keys.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-321",
    "compliance_violations": ["NIST 800-53 SC-12", "GDPR Article 32"],
    "references": ["https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-005",
    "stack": "bedrockknowledgebase",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Bedrock::KnowledgeBase",
    "resource_name": "KnowledgeBase",
    "title": "Insufficient logging for Bedrock Knowledge Base access",
    "issue": "No CloudTrail logs or custom logging is explicitly configured to monitor access and usage patterns of the Bedrock Knowledge Base, limiting auditability and investigation capabilities.",
    "attack_vector": "Unauthorized access or abuse of the Knowledge Base might go undetected without proper logging and monitoring.",
    "impact": "Inability to detect, investigate, or respond to suspicious activities or unauthorized access to the knowledge base.",
    "remediation": "Enable CloudTrail data events for Bedrock services and implement additional application-level logging for all knowledge base interactions. Consider implementing an audit solution that captures all interactions with the knowledge base.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-778",
    "compliance_violations": ["NIST 800-53 AU-2", "PCI DSS Requirement 10"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/monitoring.html"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-006",
    "stack": "bedrockknowledgebase",
    "stride_category": "Elevation of Privilege",
    "severity": "Medium",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "KnowledgeBaseServiceRole",
    "title": "Broad permission to invoke any Bedrock foundation model",
    "issue": "The KnowledgeBaseServiceRole has permission to invoke any foundation model in Bedrock (bedrock:InvokeModel on arn:aws:bedrock:${AWS::Region}::foundation-model/*) rather than being limited to specific required models.",
    "attack_vector": "If the service role is compromised, an attacker could invoke any Bedrock model, potentially leading to unexpected costs or data leakage through prompt engineering.",
    "impact": "Potential for unauthorized usage of any Bedrock model, leading to increased costs or potential data leakage through carefully crafted prompts.",
    "remediation": "Restrict the bedrock:InvokeModel permission to only the specific embedding model being used (pEmbedModel parameter) rather than allowing access to all foundation models.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16", "NIST 800-53 AC-6"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-007",
    "stack": "bedrockknowledgebase",
    "stride_category": "Denial of Service",
    "severity": "Medium",
    "resource_type": "AWS::Bedrock::DataSource",
    "resource_name": "WebDataSource",
    "title": "Web crawler rate limit potentially too high",
    "issue": "The web crawler is configured with a rate limit of 300 requests, which could potentially cause excessive load on target websites leading to IP blocking or service disruption.",
    "attack_vector": "The crawler could unintentionally create a denial of service condition on target websites by sending too many requests in a short period.",
    "impact": "Target websites might block the crawler's IP address, resulting in incomplete data collection and potential service disruption for both the crawler and target websites.",
    "remediation": "Implement a more conservative rate limit for the web crawler and consider implementing progressive back-off strategies. Evaluate the actual needs of the application and reduce the rate limit to a more reasonable value.",
    "priority": 3,
    "estimated_effort": "Low",
    "cwe_id": "CWE-770",
    "compliance_violations": ["OWASP API Security Top 10 2023 - API4: Unrestricted Resource Consumption"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-crawling.html"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-008",
    "stack": "bedrockknowledgebase",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "AWS::Bedrock::DataSource",
    "resource_name": "S3DataSource",
    "title": "Lack of versioning for S3 data source",
    "issue": "The template does not ensure versioning is enabled on the S3 bucket used as a data source, creating risk of data tampering without an audit trail or recovery mechanism.",
    "attack_vector": "An attacker with access to the S3 bucket could modify or delete source documents without any ability to recover previous versions or detect changes.",
    "impact": "Potential for undetected tampering with knowledge base source data, leading to misinformation or data loss without a recovery path.",
    "remediation": "Enable versioning on the S3 bucket used as a data source. While the template uses an existing bucket, it should either validate that versioning is enabled or provide guidance to enable it.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-693",
    "compliance_violations": ["CIS AWS Foundations Benchmark 3.8", "NIST 800-53 SI-7"],
    "references": ["https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-009",
    "stack": "bedrockknowledgebase",
    "stride_category": "Spoofing",
    "severity": "Low",
    "resource_type": "AWS::Lambda::Function",
    "resource_name": "CreateOSSIndexLambdaFunction",
    "title": "Lambda function using hardcoded S3 code location",
    "issue": "The Lambda function uses a hardcoded S3 bucket and path for the code, which could be redirected or spoofed if the S3 object is replaced.",
    "attack_vector": "If an attacker gains access to the S3 bucket containing the Lambda code, they could replace the code with malicious content that would be executed with the Lambda's permissions.",
    "impact": "Potential execution of unauthorized code with the permissions of the Lambda function's role.",
    "remediation": "Use code signing for Lambda functions to ensure the integrity of the deployed code. Additionally, ensure the S3 bucket has appropriate access controls and versioning enabled.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-494",
    "compliance_violations": ["NIST 800-53 SI-7"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-010",
    "stack": "bedrockknowledgebase",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "Custom::InvokeCreateOSSIndexLambdaFunction",
    "resource_name": "InvokeCreateOSSIndexLambdaFunction",
    "title": "Sensitive information in custom resource properties",
    "issue": "The custom resource properties include sensitive information like collection endpoints and embedding model IDs that might be logged in CloudWatch Logs without appropriate protection.",
    "attack_vector": "An attacker with access to CloudWatch Logs could potentially extract sensitive configuration details that could be used to target the OpenSearch collection.",
    "impact": "Potential disclosure of sensitive configuration information that could aid in targeting the knowledge base infrastructure.",
    "remediation": "Implement log filtering for sensitive information and ensure CloudWatch Logs are encrypted. Consider using AWS Secrets Manager for storing sensitive configuration values.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-532",
    "compliance_violations": ["NIST 800-53 SC-28"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html"],
    "status": "Open"
  },
  {
    "id": "BEDROCKKNOWLEDGEBASE-THREAT-011",
    "stack": "bedrockknowledgebase",
    "stride_category": "Information Disclosure",
    "severity": "Low",
    "resource_type": "AWS::Lambda::Function",
    "resource_name": "GetSeedUrlsFunction",
    "title": "Potential URL information disclosure in logs",
    "issue": "The GetSeedUrlsFunction logs the entire event object with 'logger.info(event)', which may include sensitive URLs in CloudWatch Logs that could reveal internal systems or crawling targets.",
    "attack_vector": "An attacker with access to CloudWatch Logs could gather information about what websites and internal systems are being crawled, potentially using this for reconnaissance.",
    "impact": "Disclosure of targeted URLs and crawling patterns that could reveal business intelligence or crawling strategy.",
    "remediation": "Implement selective logging that avoids recording the full URLs or sensitive parameters. Filter or mask sensitive parts of URLs before logging.",
    "priority": 4,
    "estimated_effort": "Low",
    "cwe_id": "CWE-532",
    "compliance_violations": ["NIST 800-53 SC-28"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html"],
    "status": "Open"
  }
]