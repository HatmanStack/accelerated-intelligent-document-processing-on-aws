[
  {
    "id": "GENAI-IDP-THREAT-001",
    "stack": "genai-idp",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::CloudFront::Distribution",
    "resource_name": "CloudFrontDistribution",
    "title": "CloudFront Distribution Using Default Certificate",
    "issue": "The CloudFront distribution is using the default CloudFront certificate (CloudFrontDefaultCertificate: true) rather than a custom certificate. While this provides HTTPS, it doesn't validate the specific domain ownership to users.",
    "attack_vector": "An attacker could potentially create a similar-looking domain and phish users by exploiting their trust in the AWS domain.",
    "impact": "Reduced trust from users who may question the authenticity of the site when seeing the CloudFront domain rather than a branded domain.",
    "remediation": "Consider using a custom SSL certificate via AWS Certificate Manager and configuring a custom domain name for the CloudFront distribution.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-295",
    "compliance_violations": ["OWASP ASVS v4.0 14.5.1"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-002",
    "stack": "genai-idp",
    "stride_category": "Authentication",
    "severity": "Medium",
    "resource_type": "AWS::Cognito::UserPool",
    "resource_name": "UserPool",
    "title": "No MFA Requirement for Cognito User Pool",
    "issue": "The Cognito User Pool is configured without requiring multi-factor authentication (MFA), which leaves user accounts more vulnerable to credential-based attacks.",
    "attack_vector": "An attacker who obtains a user's credentials through phishing or other means could gain complete access to the account without the additional security layer that MFA provides.",
    "impact": "Increased risk of unauthorized account access and potential exposure of sensitive information or unauthorized actions.",
    "remediation": "Enable MFA for the Cognito User Pool by configuring MfaConfiguration to 'ON' or 'OPTIONAL', and consider requiring MFA for sensitive operations.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-308",
    "compliance_violations": ["CIS Controls v7.1 4.5", "NIST 800-53 IA-2(1)"],
    "references": ["https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-mfa.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-003",
    "stack": "genai-idp",
    "stride_category": "Elevation of Privilege",
    "severity": "Medium",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "StartUICodeBuildExecutionRole",
    "title": "Overly Permissive CloudWatch Logs IAM Policy",
    "issue": "The StartUICodeBuildExecutionRole has overly broad permissions for CloudWatch Logs actions ('logs:*') on all resources ('*'). This violates the principle of least privilege.",
    "attack_vector": "If this role is compromised, an attacker could read, modify or delete any CloudWatch Logs in the account, potentially hiding their activities or accessing sensitive information in logs.",
    "impact": "Potential for unauthorized access to sensitive log data, tampering with audit trails, or deletion of important logging information.",
    "remediation": "Scope down the CloudWatch Logs permissions to specific log groups and restrict the actions to only those that are required (e.g., CreateLogGroup, CreateLogStream, PutLogEvents) rather than using the '*' wildcard.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations 1.16", "NIST 800-53 AC-6"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-identity-based-access-control-cwl.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-004",
    "stack": "genai-idp",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "AWS::S3::BucketPolicy",
    "resource_name": "LoggingBucketPolicy",
    "title": "Missing Bucket Policy to Enforce Object Encryption",
    "issue": "While the LoggingBucket has server-side encryption enabled, the bucket policy does not enforce encryption for object uploads. This could allow unencrypted objects to be uploaded to the bucket.",
    "attack_vector": "An authenticated user with upload permissions could potentially upload unencrypted sensitive data to the bucket, bypassing the encryption requirements.",
    "impact": "Risk of unencrypted sensitive data being stored, which could violate data protection requirements or compliance standards.",
    "remediation": "Add a bucket policy condition to deny PutObject requests that don't include appropriate encryption headers (x-amz-server-side-encryption).",
    "priority": 3,
    "estimated_effort": "Low",
    "cwe_id": "CWE-311",
    "compliance_violations": ["CIS AWS Foundations 2.1.2", "GDPR Article 32"],
    "references": ["https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-policies-examples-encryption.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-005",
    "stack": "genai-idp",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Lambda::Function",
    "resource_name": "Multiple Lambda Functions",
    "title": "Inconsistent CloudWatch Logs Encryption",
    "issue": "While many Lambda function log groups are configured with KMS encryption, some log groups do not have explicit KMS encryption configuration. This inconsistency could lead to some logs being stored without proper encryption.",
    "attack_vector": "An attacker with access to unencrypted logs could potentially access sensitive information or manipulate log data without detection.",
    "impact": "Potential exposure of sensitive information in logs and inability to definitively prove the integrity of log data, affecting non-repudiation capabilities.",
    "remediation": "Ensure all Lambda function log groups are consistently encrypted with the CustomerManagedEncryptionKey by explicitly configuring KmsKeyId for every LogGroup resource.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-311",
    "compliance_violations": ["NIST 800-53 AU-9", "PCI DSS 3.4"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-006",
    "stack": "genai-idp",
    "stride_category": "Elevation of Privilege",
    "severity": "High",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "CognitoClientUpdaterRole",
    "title": "Overly Permissive IAM Role for Cognito and SageMaker",
    "issue": "The CognitoClientUpdaterRole has permissions to perform actions on any Cognito and SageMaker resource ('*') rather than being scoped to specific resources. This violates the principle of least privilege.",
    "attack_vector": "If this role is compromised, an attacker could potentially modify any Cognito user pool or SageMaker workteam in the account, enabling unauthorized access or disruption of services.",
    "impact": "Potential for unauthorized modifications to authentication configurations or SageMaker workteams across the entire AWS account.",
    "remediation": "Restrict the IAM policy to only allow actions on specific resources by replacing the '*' wildcard with ARNs of the specific Cognito user pool and SageMaker workteam resources needed.",
    "priority": 1,
    "estimated_effort": "Low",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations 1.16", "NIST 800-53 AC-6(1)"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-007",
    "stack": "genai-idp",
    "stride_category": "Denial of Service",
    "severity": "Low",
    "resource_type": "AWS::AppSync::GraphQLApi",
    "resource_name": "GraphQLApi",
    "title": "Missing Request Limiting for AppSync API",
    "issue": "The AppSync GraphQL API does not have explicit request throttling or rate limiting configured, which could make it vulnerable to abuse or denial of service attacks.",
    "attack_vector": "An attacker could make a large number of API requests to exhaust resources or increase costs, potentially affecting availability for legitimate users.",
    "impact": "Potential for service degradation, increased costs, or resource exhaustion leading to denial of service for legitimate users.",
    "remediation": "Configure appropriate request throttling limits for the AppSync API using AWS WAF rate-based rules or AppSync's QueryDepthLimit and ResolverQueryLimit settings.",
    "priority": 4,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-770",
    "compliance_violations": ["OWASP API Security Top 10 2019 API4", "NIST 800-53 SC-5"],
    "references": ["https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-008",
    "stack": "genai-idp",
    "stride_category": "Spoofing",
    "severity": "Low",
    "resource_type": "AWS::Cognito::UserPoolClient",
    "resource_name": "UserPoolClient",
    "title": "Short Token Validity Period for Cognito User Pool",
    "issue": "The UserPoolClient has a very short token validity period (IdTokenValidity and AccessTokenValidity set to 1), which could lead to frequent re-authentication and potentially encourage insecure practices like token caching.",
    "attack_vector": "Frequent token expiration might lead developers to implement insecure token handling practices, such as client-side caching of credentials, making the application more susceptible to session hijacking.",
    "impact": "Potential for reduced security if developers implement workarounds for the frequent token expiration, or poor user experience due to frequent re-authentication requirements.",
    "remediation": "Consider increasing the token validity period to a more reasonable value (e.g., 60 minutes for access tokens) while implementing proper token refresh mechanisms and secure token storage practices.",
    "priority": 4,
    "estimated_effort": "Low",
    "cwe_id": "CWE-613",
    "compliance_violations": ["OWASP ASVS v4.0 3.3.1"],
    "references": ["https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-009",
    "stack": "genai-idp",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::CloudFront::Distribution",
    "resource_name": "CloudFrontDistribution",
    "title": "CloudFront Web Application Without WAF Protection",
    "issue": "The CloudFront distribution does not have AWS WAF configured by default (the WAFAllowedIPv4Ranges parameter defaults to '0.0.0.0/0', which disables WAF). This leaves the web application vulnerable to common web application attacks.",
    "attack_vector": "Attackers could perform SQL injection, cross-site scripting (XSS), or other common web attacks against the application without the protection that AWS WAF would provide.",
    "impact": "Increased vulnerability to common web application attacks that could lead to data theft, unauthorized access, or service disruption.",
    "remediation": "Enable AWS WAF by configuring appropriate IP restrictions through the WAFAllowedIPv4Ranges parameter or implement a comprehensive WAF ruleset to protect against common web vulnerabilities.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-1021",
    "compliance_violations": ["OWASP Top 10 2021 A05", "NIST 800-53 SC-7(8)"],
    "references": ["https://docs.aws.amazon.com/waf/latest/developerguide/cloudfront-features.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-010",
    "stack": "genai-idp",
    "stride_category": "Information Disclosure",
    "severity": "High",
    "resource_type": "AWS::SQS::Queue",
    "resource_name": "DocumentQueue, DocumentQueueDLQ, QueueSenderDLQ, WorkflowTrackerDLQ, EvaluationFunctionDLQ",
    "title": "Missing SQS Queue Policy to Enforce Encrypted Transport",
    "issue": "While the SQS queues have server-side encryption enabled with KMS, some queues are missing policies to enforce encrypted transport (SSL/TLS), potentially allowing unencrypted connections.",
    "attack_vector": "An attacker with network access could potentially intercept queue messages sent over unencrypted connections, compromising the confidentiality of the data.",
    "impact": "Potential exposure of sensitive information contained in queue messages during transit.",
    "remediation": "Add a policy statement to all SQS queues that denies any action when the secure transport condition is not met, similar to what is done for the DocumentQueueDLQPolicy but consistently for all queues.",
    "priority": 1,
    "estimated_effort": "Low",
    "cwe_id": "CWE-319",
    "compliance_violations": ["PCI DSS 4.1", "NIST 800-53 SC-8"],
    "references": ["https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-security-best-practices.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-011",
    "stack": "genai-idp",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "Multiple Lambda Functions",
    "title": "Inconsistent Lambda Function Log Retention Periods",
    "issue": "Some Lambda functions have explicitly configured log retention periods, while others rely on default settings. This inconsistency could lead to premature deletion of important log data or unnecessary storage costs.",
    "attack_vector": "A malicious actor's activities might not be traceable if logs are deleted before security investigations can take place due to short retention periods.",
    "impact": "Potential loss of important audit trail information, making security investigations and compliance verification more difficult.",
    "remediation": "Ensure all Lambda function log groups have consistent retention periods based on organizational security and compliance requirements by explicitly setting RetentionInDays for every LogGroup resource.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-778",
    "compliance_violations": ["NIST 800-53 AU-11", "SOX Section 404"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-012",
    "stack": "genai-idp",
    "stride_category": "Denial of Service",
    "severity": "Medium",
    "resource_type": "AWS::Lambda::Function",
    "resource_name": "Multiple Lambda Functions",
    "title": "Lambda Functions Without Reserved Concurrency",
    "issue": "Most Lambda functions in the template do not have reserved concurrency configured, which could lead to resource exhaustion if one function consumes all available Lambda concurrency in the AWS account.",
    "attack_vector": "A sudden spike in requests to one function could consume all available concurrency, preventing other Lambda functions from executing and causing a denial of service for other parts of the application.",
    "impact": "Potential service disruption if a high-volume Lambda function consumes all available concurrency, affecting the availability of other functions in the account.",
    "remediation": "Configure reserved concurrency for critical Lambda functions to ensure they always have capacity to run, and consider adding provisioned concurrency for functions with predictable traffic patterns.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-400",
    "compliance_violations": ["NIST 800-53 SC-6"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-013",
    "stack": "genai-idp",
    "stride_category": "Elevation of Privilege",
    "severity": "Medium",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "A2IHumanTaskUILambdaRole",
    "title": "Overly Permissive IAM Policy for SageMaker Operations",
    "issue": "The A2IHumanTaskUILambdaRole has broad permissions for SageMaker operations on all resources ('*') rather than being limited to specific resources.",
    "attack_vector": "If this role is compromised, an attacker could potentially create, modify, or delete any SageMaker resource in the account.",
    "impact": "Potential for unauthorized access to SageMaker resources, disruption of machine learning workloads, or exposure of sensitive data in SageMaker environments.",
    "remediation": "Restrict the IAM policy to only allow actions on specific SageMaker resources by replacing the '*' wildcard with ARNs of the specific resources needed.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations 1.16", "NIST 800-53 AC-6(1)"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-014",
    "stack": "genai-idp",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::Bedrock::KnowledgeBase",
    "resource_name": "DOCUMENTBEDROCKKB",
    "title": "Potential Sensitive Data Exposure Through Knowledge Base",
    "issue": "The template creates a Bedrock Knowledge Base (DOCUMENTBEDROCKKB) that processes documents from the OutputBucket, but there are no explicit controls to prevent sensitive information from being indexed and potentially exposed through knowledge base queries.",
    "attack_vector": "An authorized user could potentially query the knowledge base to extract sensitive information that was not intended to be exposed through the knowledge base interface.",
    "impact": "Potential unintended disclosure of sensitive information contained in processed documents, which could lead to data breaches or compliance violations.",
    "remediation": "Implement content filtering or redaction mechanisms before documents are indexed in the knowledge base, and consider adding data classification checks to prevent sensitive documents from being indexed.",
    "priority": 2,
    "estimated_effort": "High",
    "cwe_id": "CWE-200",
    "compliance_violations": ["GDPR Article 32", "HIPAA §164.312(a)(1)"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base.html"],
    "status": "Open"
  },
  {
    "id": "GENAI-IDP-THREAT-015",
    "stack": "genai-idp",
    "stride_category": "Tampering",
    "severity": "Low",
    "resource_type": "AWS::S3::Bucket",
    "resource_name": "WebUIBucket",
    "title": "WebUI Bucket Missing Object Lock Configuration",
    "issue": "The WebUIBucket, which hosts the web application static content, does not have Object Lock enabled, potentially allowing unauthorized modifications to the web application files if access controls are compromised.",
    "attack_vector": "An attacker who gains access to the bucket could modify web application files to inject malicious code that would be served to users.",
    "impact": "Potential for serving modified or malicious web content to users if the bucket access controls are compromised.",
    "remediation": "Consider enabling Object Lock on the WebUIBucket in compliance mode with a retention period that matches deployment cycles to prevent unauthorized modifications between legitimate deployments.",
    "priority": 4,
    "estimated_effort": "Low",
    "cwe_id": "CWE-434",
    "compliance_violations": ["NIST 800-53 SI-7"],
    "references": ["https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html"],
    "status": "Open"
  }
]