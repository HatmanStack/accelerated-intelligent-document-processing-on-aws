[
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::CloudFormation::Stack",
    "resourceName": "BDASAMPLEPROJECT",
    "issue": "Nested stack without explicit encryption for log groups which may lead to logging data being stored without encryption at rest",
    "priority": "High",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::CloudFormation::Stack",
    "resourceName": "DOCUMENTBEDROCKKB",
    "issue": "Nested stack without explicit encryption for log groups which may lead to logging data being stored without encryption at rest",
    "priority": "High",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::CloudFormation::Stack",
    "resourceName": "PATTERN1STACK, PATTERN2STACK, PATTERN3STACK",
    "issue": "Nested stacks with potential security configurations that are not enforced at the parent template level",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "LoggingBucket",
    "issue": "Logging bucket uses AES256 encryption instead of KMS for more granular key management and access control",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::S3::Bucket",
    "resourceName": "WebUIBucket",
    "issue": "WebUI bucket uses AES256 encryption instead of KMS for more granular key management and access control",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "ConfigurationCopyFunction",
    "issue": "Function has permissions to access all objects in the ConfigurationBucket with wildcard resource policy",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "DashboardMergerFunction",
    "issue": "Function has permissions to access all CloudWatch dashboards with wildcard resource policy",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "WorkflowTracker",
    "issue": "Function has wildcard permissions for cloudwatch:PutMetricData which could be scoped to specific metrics",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "SaveReportingDataFunction",
    "issue": "Function has wildcard permissions for cloudwatch:PutMetricData which could be scoped to specific metrics",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "EvaluationFunction",
    "issue": "Function has wildcard permissions for cloudwatch:PutMetricData which could be scoped to specific metrics",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "EvaluationFunction",
    "issue": "Function has broad bedrock:InvokeModel permissions that could be scoped to specific models",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "AnalyticsProcessorFunction",
    "issue": "Function has broad bedrock:InvokeModel permissions that could be scoped to specific models",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Lambda::Function",
    "resourceName": "ChatWithDocumentResolverFunction",
    "issue": "Function has broad bedrock:InvokeModel permissions that could be scoped to specific models",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::CloudFront::Distribution",
    "resourceName": "CloudFrontDistribution",
    "issue": "CloudFront uses default CloudFront certificate rather than a custom certificate which is a security best practice for production environments",
    "priority": "Low",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::Cognito::UserPool",
    "resourceName": "UserPool",
    "issue": "MFA is not enabled which increases the risk of unauthorized access",
    "priority": "Medium",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "CognitoClientUpdaterRole",
    "issue": "IAM role has permissions to perform cognito-idp:UpdateUserPoolClient, cognito-idp:DescribeUserPoolClient, and sagemaker:DescribeWorkteam on all resources",
    "priority": "High",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "A2IHumanTaskUILambdaRole",
    "issue": "IAM role has permissions to perform multiple SageMaker A2I operations on all resources with wildcard",
    "priority": "High",
    "status": "Open"
  },
  {
    "source": "security-matrix",
    "stack": "template.yaml",
    "resourceType": "AWS::IAM::Role",
    "resourceName": "StartUICodeBuildExecutionRole",
    "issue": "IAM role has permissions to put and delete CloudWatch log events with wildcard resource specification",
    "priority": "Medium",
    "status": "Open"
  }
]