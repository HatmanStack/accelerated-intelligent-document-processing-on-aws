[
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-001",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::Lambda::Function",
    "resource_name": "Multiple Lambda Functions",
    "title": "Environment Variables May Contain Sensitive Information",
    "issue": "Lambda functions contain environment variables that could potentially store sensitive information. While there's no evidence of secrets in the current environment variables, they could be added in the future and might be exposed through function configuration or logs.",
    "attack_vector": "An attacker with Lambda read permissions could view environment variables. Additionally, if logging is verbose, environment variables might be inadvertently logged.",
    "impact": "Potential exposure of configuration values or other sensitive information that could be used to further compromise the system.",
    "remediation": "Use AWS Secrets Manager or Parameter Store for sensitive values instead of environment variables. Enable AWS Lambda environment variable encryption. Review logging practices to ensure environment variables are not being logged.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-527",
    "compliance_violations": ["CIS AWS Foundations Benchmark 2.4"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-002",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Elevation of Privilege",
    "severity": "High",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "InvokeBDAFunction",
    "title": "Overly Permissive CloudWatch PutMetricData Permission",
    "issue": "The InvokeBDAFunction has permission to call cloudwatch:PutMetricData on all resources ('*'), which grants broader permissions than necessary. This violates the principle of least privilege.",
    "attack_vector": "If the Lambda function is compromised, an attacker could use these permissions to create misleading metrics or potentially cause CloudWatch throttling issues.",
    "impact": "Potential for metric manipulation, misleading monitoring data, and possible denial of service through metric flooding.",
    "remediation": "Scope down the CloudWatch PutMetricData permissions to specific metric namespaces used by the function, rather than using a wildcard resource.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/iam-access-control-overview-cw.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-003",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "AWS::DynamoDB::Table",
    "resource_name": "BDAMetadataTable",
    "title": "DynamoDB Table Missing Auto-Scaling Configuration",
    "issue": "The BDAMetadataTable is using PAY_PER_REQUEST billing mode without any capacity planning or auto-scaling configuration. This could lead to throttling during high demand or unexpected costs.",
    "attack_vector": "An attacker could potentially cause a denial of service or excessive billing by generating high volumes of requests to the table.",
    "impact": "Service disruption, performance degradation, or unexpectedly high AWS costs.",
    "remediation": "Consider implementing provisioned capacity with auto-scaling for more predictable performance. Set up CloudWatch alarms to detect and respond to unusual traffic patterns.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-400",
    "compliance_violations": [],
    "references": ["https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-004",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::StateMachine",
    "resource_name": "DocumentProcessingStateMachine",
    "title": "State Machine Logging Exposes Execution Data",
    "issue": "The DocumentProcessingStateMachine has logging configured with 'IncludeExecutionData: true', which means all input and output data for each state transition is logged. This could potentially include sensitive information processed by the workflow.",
    "attack_vector": "An attacker with access to CloudWatch logs could extract sensitive information from document processing tasks.",
    "impact": "Exposure of potentially sensitive document data, including any personally identifiable information (PII) that might be contained in processed documents.",
    "remediation": "Set 'IncludeExecutionData: false' unless full execution data logging is specifically required. Implement data filtering to redact sensitive information before it's passed between states.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-532",
    "compliance_violations": ["GDPR Article 32", "CCPA"],
    "references": ["https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-logs.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-005",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::SQS::Queue",
    "resource_name": "BDACompletionFunctionDLQ",
    "title": "DLQ Messages Could Contain Sensitive Information",
    "issue": "The BDACompletionFunctionDLQ may store failed messages that contain sensitive document processing information. If these messages aren't properly secured or monitored, they could lead to information disclosure.",
    "attack_vector": "An attacker with SQS access could read failed processing messages containing sensitive document content or extraction results.",
    "impact": "Potential exposure of document contents, extracted data, or system configuration information.",
    "remediation": "Implement a dead letter queue monitoring and cleanup process. Consider implementing message sanitization before messages are sent to the DLQ. Set up alerts for messages arriving in the DLQ to ensure they are promptly addressed.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-200",
    "compliance_violations": ["GDPR Article 32"],
    "references": ["https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-006",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Elevation of Privilege",
    "severity": "High",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "HITLProcessLambdaRole",
    "title": "Overly Permissive S3 Write Access",
    "issue": "HITLProcessLambdaRole has broad write permissions (s3:PutObject) to the entire output bucket, allowing it to write to any location within the bucket.",
    "attack_vector": "If the Lambda function is compromised, an attacker could overwrite existing files or add malicious content to the output bucket.",
    "impact": "Data integrity issues, potential for serving malicious content to downstream consumers, or overwriting legitimate processing results.",
    "remediation": "Restrict S3 write permissions to specific prefixes or paths within the bucket that the function actually needs to access. Consider using dynamic policy conditions to limit access based on request context.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16"],
    "references": ["https://docs.aws.amazon.com/AmazonS3/latest/userguide/security-best-practices.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-007",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Denial of Service",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "Multiple Lambda Functions",
    "title": "Missing Concurrency Controls on Lambda Functions",
    "issue": "Lambda functions in this template don't have reserved or provisioned concurrency settings, which means they could consume all available account concurrency during high load or in case of recursive invocation.",
    "attack_vector": "An attacker could trigger excessive function invocations, potentially exhausting the account's Lambda concurrency limit and affecting other functions.",
    "impact": "Service disruption for other Lambda functions in the account, processing delays, and potential failure of document processing workflows.",
    "remediation": "Configure reserved or provisioned concurrency for critical Lambda functions. Implement throttling at the API level. Set up monitoring and alerts for unusual invocation patterns.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-770",
    "compliance_violations": [],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-008",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::StateMachine",
    "resource_name": "DocumentProcessingStateMachine",
    "title": "State Machine Input Validation Missing",
    "issue": "The state machine doesn't appear to have explicit input validation, potentially allowing malformed or malicious inputs to flow through the workflow.",
    "attack_vector": "An attacker could inject unexpected data formats or values that might be processed differently by different components, potentially causing unexpected behavior.",
    "impact": "Processing inconsistencies, potential for injection attacks in downstream systems, or workflow errors leading to service disruption.",
    "remediation": "Add input validation as the first step in the state machine workflow. Implement schema validation for all inputs and between state transitions. Consider implementing a 'validator' Lambda function at the beginning of the workflow.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-20",
    "compliance_violations": [],
    "references": ["https://docs.aws.amazon.com/step-functions/latest/dg/concepts-input-output-filtering.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-009",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Spoofing",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "SummarizationFunction",
    "title": "Bedrock Model Access Without Source Validation",
    "issue": "The SummarizationFunction has permissions to invoke any Bedrock model without restrictions, and there's no apparent validation of input sources before processing with AI models.",
    "attack_vector": "An attacker who gains access to input channels could potentially submit manipulated documents or prompts designed to extract sensitive information or produce harmful outputs from AI models.",
    "impact": "Potential for prompt injection attacks, model manipulation, or generation of harmful content through the AI processing pipeline.",
    "remediation": "Implement source validation for all inputs. Add input sanitization before sending to Bedrock models. Consider restricting Bedrock permissions to specific model IDs rather than using wildcards. Implement guardrails for all model interactions.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-345",
    "compliance_violations": [],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/security-iam.html"],
    "status": "Open"
  },
  {
    "id": "AWS-GENAI-IDP-ACCELERATOR-RESOURCES-PATTERN1-THREAT-010",
    "stack": "aws-genai-idp-accelerator-resources-pattern1",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Events::Rule",
    "resource_name": "HITLEventRule",
    "title": "Incomplete Audit Trail for Human Review Actions",
    "issue": "The Human-In-The-Loop (HITL) process captures completion events but may not capture sufficient details about who performed the review and what specific changes they made.",
    "attack_vector": "A malicious reviewer could make unauthorized changes to documents without sufficient traceability.",
    "impact": "Inability to fully audit human review actions, potential compliance issues for regulated industries, and difficulty investigating security incidents.",
    "remediation": "Enhance logging for HITL processes to capture reviewer identity, timestamp, and specific changes made. Consider implementing approval workflows for sensitive documents or changes above certain thresholds.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-778",
    "compliance_violations": ["GDPR Article 30", "HIPAA"],
    "references": ["https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-permissions-security.html"],
    "status": "Open"
  }
]