[
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-001",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Elevation of Privilege",
    "severity": "High",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "LambdaExecutionRole",
    "title": "Overly Permissive IAM Policy",
    "issue": "The LambdaExecutionRole contains a policy with wildcard (*) resources for Bedrock actions, violating the principle of least privilege. This allows the Lambda function to access potentially all Bedrock resources in the account.",
    "attack_vector": "If the Lambda function is compromised, an attacker could leverage these excessive permissions to access, modify, or delete any Bedrock data automation project or blueprint in the account, including those unrelated to this specific application.",
    "impact": "Unauthorized access to Bedrock resources could lead to data exfiltration, resource manipulation, or disruption of other services using Bedrock in the organization.",
    "remediation": "Scope down the IAM policy to specific resources where possible. Replace the wildcard resource with specific ARNs of the Bedrock resources this Lambda function needs to access. If resource-level permissions are not supported for specific actions, implement additional guardrails such as tagging strategies or conditions in the policy.",
    "priority": 1,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16", "AWS Well-Architected Framework - Security Pillar"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-002",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Insufficient Logging for Administrative Actions",
    "issue": "The Lambda function responsible for creating and managing Bedrock Data Automation resources has basic CloudWatch logging but lacks comprehensive audit logging for sensitive administrative actions. While LOG_LEVEL is configurable, there's no explicit configuration for capturing detailed audit trails of resource creation, modification, or deletion events.",
    "attack_vector": "Without proper audit logs, unauthorized changes to Bedrock resources could be made without adequate traceability, making it difficult to investigate security incidents or prove compliance.",
    "impact": "Reduced ability to detect unauthorized activities, troubleshoot issues, or meet compliance requirements that mandate comprehensive audit trails for administrative actions.",
    "remediation": "Enhance the Lambda function code to implement detailed audit logging that captures all significant administrative actions, including who performed them, when, and what was changed. Consider implementing a dedicated audit trail storage mechanism separate from operational logs. Enable AWS CloudTrail data events for relevant Bedrock API calls.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-778",
    "compliance_violations": ["SOC 2 Type II", "NIST 800-53 AU-2"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/lambda-monitoring.html", "https://docs.aws.amazon.com/bedrock/latest/userguide/logging-using-cloudtrail.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-003",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "Custom::BDAProject",
    "resource_name": "BDAProject",
    "title": "Sensitive Data Processing Without Explicit Security Controls",
    "issue": "The template processes potentially sensitive lending documents (bank statements, payslips, driver's licenses, etc.) using Bedrock Data Automation, but does not explicitly define security controls for data protection such as encryption requirements, access restrictions, or data handling policies.",
    "attack_vector": "Without proper security controls, sensitive personal and financial information contained in these documents could be exposed during processing, storage, or transmission within the Bedrock service.",
    "impact": "Potential exposure of personally identifiable information (PII) and financial data could lead to regulatory violations, privacy breaches, and damage to customer trust.",
    "remediation": "Implement explicit security controls for data processing: 1) Ensure encryption in transit and at rest for all document data, 2) Define clear access boundaries and permissions for processed documents, 3) Implement data lifecycle policies to ensure data is retained only as long as necessary, 4) Consider adding resource policies that restrict which principals can access the processed data.",
    "priority": 2,
    "estimated_effort": "High",
    "cwe_id": "CWE-311",
    "compliance_violations": ["GDPR Article 32", "CCPA", "GLBA"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/security.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-004",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Denial of Service",
    "severity": "Low",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Missing Concurrency Controls",
    "issue": "The BDAProjectLambda function does not have reserved concurrency or concurrency limits defined. The template explicitly skips this control (CKV_AWS_115). While this may be an intentional design choice, it leaves the function vulnerable to potential resource exhaustion.",
    "attack_vector": "In a high-traffic environment or during a spike in requests, the Lambda function could consume all available execution capacity in the AWS account, potentially affecting other functions and services.",
    "impact": "Potential service degradation or unavailability of other Lambda functions in the same AWS account, leading to broader application disruption.",
    "remediation": "Consider implementing appropriate concurrency controls: 1) Set reserved concurrency to guarantee execution capacity for this function, 2) Set maximum concurrency limits to prevent resource exhaustion, 3) Implement throttling or queuing mechanisms for high-volume scenarios.",
    "priority": 3,
    "estimated_effort": "Low",
    "cwe_id": "CWE-400",
    "compliance_violations": ["AWS Well-Architected Framework - Reliability Pillar"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-005",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "Custom::BDAProject",
    "resource_name": "BDAProject",
    "title": "Missing Version Control and Integrity Verification",
    "issue": "While the template specifies a 'Version' property for the BDA project, there's no mechanism to validate the integrity of blueprints or ensure they haven't been tampered with. The deployment process doesn't include checksum verification or source control integration for the blueprints being used.",
    "attack_vector": "An attacker with sufficient access could potentially modify blueprint definitions or swap them with malicious versions that could extract or manipulate sensitive data being processed.",
    "impact": "Data processing logic could be compromised, potentially leading to data leakage, incorrect document classification, or insertion of malicious logic into the document processing workflow.",
    "remediation": "Implement integrity verification mechanisms: 1) Use checksums or digital signatures to validate blueprint integrity, 2) Implement a formal change management process for blueprints, 3) Consider using AWS CodePipeline with approval gates for blueprint deployment, 4) Add regular automated scanning of blueprints for malicious patterns.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-345",
    "compliance_violations": ["NIST 800-53 SI-7"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/security-dataprotection.html"],
    "status": "Open"
  }
]