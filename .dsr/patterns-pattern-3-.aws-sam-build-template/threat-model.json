[
  {
    "id": "PATTERN3-THREAT-001",
    "stack": "Pattern3",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "OCRFunction",
    "title": "Overly permissive Textract permissions",
    "issue": "The OCRFunction has permissions to call textract:DetectDocumentText and textract:AnalyzeDocument on all resources ('*'). This grants broader access than necessary and violates the principle of least privilege.",
    "attack_vector": "If the Lambda function is compromised, an attacker could use these permissions to access and analyze documents that should be out of scope for this application.",
    "impact": "Unauthorized access to documents processed through Textract, potentially leading to data leakage of sensitive information from documents outside the intended scope.",
    "remediation": "Restrict Textract permissions to only the specific operations needed. While Textract doesn't support resource-level permissions currently, consider implementing detective controls like CloudTrail monitoring for unusual Textract usage patterns.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-250",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16"],
    "references": ["https://docs.aws.amazon.com/textract/latest/dg/security_iam_service-with-iam.html"],
    "status": "Open"
  },
  {
    "id": "PATTERN3-THREAT-002",
    "stack": "Pattern3",
    "stride_category": "Elevation of Privilege",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "ExtractionFunction",
    "title": "Broad Bedrock model invocation permissions",
    "issue": "The ExtractionFunction has permissions to invoke any foundation model ('arn:aws:bedrock:*::foundation-model/*') and inference profile. This grants broader access than necessary and violates the principle of least privilege.",
    "attack_vector": "If the Lambda function is compromised, an attacker could use these permissions to access and invoke any Bedrock model, potentially circumventing intended usage patterns or incurring unexpected costs.",
    "impact": "Unauthorized access to Bedrock models beyond what's required for the application, potentially leading to cost escalation or misuse of AI capabilities.",
    "remediation": "Restrict Bedrock invocation permissions to only the specific models required for the application's functionality, rather than allowing access to all foundation models.",
    "priority": 2,
    "estimated_effort": "Low",
    "cwe_id": "CWE-250",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16"],
    "references": ["https://docs.aws.amazon.com/bedrock/latest/userguide/security_iam_service-with-iam.html"],
    "status": "Open"
  },
  {
    "id": "PATTERN3-THREAT-003",
    "stack": "Pattern3",
    "stride_category": "Repudiation",
    "severity": "Low",
    "resource_type": "AWS::Logs::LogGroup",
    "resource_name": "StateMachineLogGroup",
    "title": "Log retention policy could be improved",
    "issue": "While the template includes log retention configuration for all log groups, the retention period is parameterized without enforcing minimum secure values. Short retention periods could impact investigation capabilities.",
    "attack_vector": "Attackers who gain unauthorized access might attempt to cover their tracks, and with short log retention periods, their actions might be automatically deleted before detection.",
    "impact": "Reduced ability to investigate security incidents or compliance violations if logs are retained for an insufficient period.",
    "remediation": "Set a minimum acceptable value for LogRetentionDays parameter with a constraint in the template to ensure logs are kept long enough for security investigations and compliance requirements (typically 90+ days).",
    "priority": 3,
    "estimated_effort": "Low",
    "cwe_id": "CWE-778",
    "compliance_violations": ["CIS AWS Foundations Benchmark 3.4", "PCI DSS 10.7"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/WhatIsCloudWatchLogs.html"],
    "status": "Open"
  },
  {
    "id": "PATTERN3-THREAT-004",
    "stack": "Pattern3",
    "stride_category": "Tampering",
    "severity": "Low",
    "resource_type": "AWS::Serverless::StateMachine",
    "resource_name": "DocumentProcessingStateMachine",
    "title": "State machine execution history potentially visible to other users",
    "issue": "The state machine is configured with 'IncludeExecutionData: true' which means execution data is included in the execution history and potentially visible to users with access to the log group.",
    "attack_vector": "Users with access to CloudWatch Logs could potentially view sensitive information processed by the state machine if it handles confidential data.",
    "impact": "Potential exposure of sensitive information that might be included in state machine execution data.",
    "remediation": "Set 'IncludeExecutionData: false' unless there is a specific requirement to log execution data. If execution data logging is necessary, ensure appropriate access controls on the log group and consider implementing log filters to redact sensitive information.",
    "priority": 3,
    "estimated_effort": "Low",
    "cwe_id": "CWE-532",
    "compliance_violations": ["GDPR Article 32"],
    "references": ["https://docs.aws.amazon.com/step-functions/latest/dg/cloudwatch-log-level.html"],
    "status": "Open"
  },
  {
    "id": "PATTERN3-THREAT-005",
    "stack": "Pattern3",
    "stride_category": "Denial of Service",
    "severity": "Low",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "OCRFunction, ClassificationFunction, ExtractionFunction, AssessmentFunction, ProcessResultsFunction, SummarizationFunction",
    "title": "No concurrency limits configured for Lambda functions",
    "issue": "Lambda functions in the template don't have concurrency limits configured, potentially allowing them to consume all available account concurrency during high load or in case of recursive invocation bugs.",
    "attack_vector": "An attacker might trigger multiple simultaneous invocations of these functions, potentially causing resource exhaustion for other Lambda functions in the same AWS account.",
    "impact": "Potential denial of service for other applications in the same AWS account if Lambda concurrency is exhausted.",
    "remediation": "Configure appropriate reserved and/or provisioned concurrency limits for each Lambda function based on expected usage patterns. This helps ensure the functions have the resources they need while preventing them from consuming all available account concurrency.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-400",
    "compliance_violations": [],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html"],
    "status": "Open"
  },
  {
    "id": "PATTERN3-THREAT-006",
    "stack": "Pattern3",
    "stride_category": "Information Disclosure",
    "severity": "Low",
    "resource_type": "AWS::CloudWatch::Dashboard",
    "resource_name": "Dashboard",
    "title": "CloudWatch Dashboard may expose sensitive operational metrics",
    "issue": "The CloudWatch Dashboard could potentially expose sensitive operational data about the application, including processing rates, error patterns, and resource utilization, to anyone with dashboard access permissions.",
    "attack_vector": "Users with dashboard access could gain insights into application behavior, processing volumes, and potential weaknesses without having direct access to the application itself.",
    "impact": "Potential disclosure of operational patterns and metrics that could aid in planning more targeted attacks or reveal business-sensitive information about processing volumes.",
    "remediation": "Implement strict IAM permissions for accessing the CloudWatch Dashboard. Consider creating separate dashboards with different levels of detail for different user roles, restricting sensitive metrics to those with operational needs.",
    "priority": 4,
    "estimated_effort": "Low",
    "cwe_id": "CWE-200",
    "compliance_violations": [],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Dashboard-Access-Control.html"],
    "status": "Open"
  },
  {
    "id": "PATTERN3-THREAT-007",
    "stack": "Pattern3",
    "stride_category": "Repudiation",
    "severity": "Low",
    "resource_type": "AWS::CloudFormation::CustomResource",
    "resource_name": "UpdateSchemaConfig, UpdateDefaultConfig",
    "title": "Custom resources might lack proper logging for configuration changes",
    "issue": "The template uses custom resources for configuration updates but doesn't explicitly define logging for these operations. This could lead to a lack of audit trail for configuration changes.",
    "attack_vector": "An attacker with sufficient permissions could modify configurations through these custom resources without leaving adequate logs of their actions.",
    "impact": "Difficulty tracking who made configuration changes and what specific changes were made, potentially impacting compliance and incident investigation capabilities.",
    "remediation": "Ensure the Lambda functions behind these custom resources implement comprehensive logging for all configuration changes, including the identity of the requester, the specific changes made, and timestamps.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-778",
    "compliance_violations": ["SOC 2 CC7.2"],
    "references": ["https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html"],
    "status": "Open"
  },
  {
    "id": "PATTERN3-THREAT-008",
    "stack": "Pattern3",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "AssessmentFunction, ExtractionFunction, SummarizationFunction",
    "title": "Potential exposure of sensitive information in logs",
    "issue": "Functions handling document content, extraction, and summarization might log sensitive information contained in the processed documents, potentially exposing PII or confidential data in CloudWatch Logs.",
    "attack_vector": "Anyone with access to CloudWatch Logs could potentially view sensitive document contents that might be included in log messages for debugging purposes.",
    "impact": "Unintended disclosure of sensitive information, personally identifiable information (PII), or confidential business data that might be present in the processed documents.",
    "remediation": "Implement log scrubbing mechanisms to redact sensitive information before logging. Configure appropriate log levels to minimize detailed content logging in production. Implement strict access controls on CloudWatch Log groups and consider using log filters to mask potentially sensitive information.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-532",
    "compliance_violations": ["GDPR Article 32", "PCI DSS 3.4"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html"],
    "status": "Open"
  }
]