[
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-001",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Elevation of Privilege",
    "severity": "High",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "LambdaExecutionRole",
    "title": "Overly Permissive Bedrock Data Automation Access",
    "issue": "The IAM policy grants wildcard (*) resource access for multiple Bedrock Data Automation actions, allowing the role to access all BDA resources within the account rather than limiting access to specific project resources.",
    "attack_vector": "If the Lambda function is compromised, an attacker could manipulate any Bedrock Data Automation project in the account, potentially accessing sensitive data or disrupting other projects.",
    "impact": "Unauthorized access to or manipulation of all Bedrock Data Automation projects in the account, potentially leading to data exposure or service disruption.",
    "remediation": "Scope down the IAM policy to restrict access to only the specific Bedrock Data Automation resources needed by this project. Replace the wildcard resource with specific ARN patterns for the project resources being created.",
    "priority": 1,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.16", "AWS Well-Architected Framework - Security Pillar"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-002",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Repudiation",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Insufficient Logging and Monitoring",
    "issue": "While the Lambda function has a configurable LOG_LEVEL parameter, there are no explicit audit trails or monitoring for the Bedrock Data Automation operations performed by the Lambda function.",
    "attack_vector": "An attacker who gains access could perform unauthorized actions on Bedrock Data Automation resources without detection or attribution.",
    "impact": "Inability to effectively monitor, audit, or investigate security incidents related to Bedrock Data Automation operations.",
    "remediation": "Implement CloudTrail data events for Bedrock API calls, configure CloudWatch Logs for detailed Lambda execution logs, and consider implementing custom logging for critical operations that captures who, what, when, and how resources are being accessed or modified.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-778",
    "compliance_violations": ["CIS AWS Foundations Benchmark 3.1", "NIST 800-53 AU-2"],
    "references": ["https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/WhatIsCloudWatchLogs.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-003",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Information Disclosure",
    "severity": "Medium",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Lambda Function Lacks VPC Integration",
    "issue": "The BDAProjectLambda function is explicitly configured to avoid VPC deployment as noted in the cfn_nag suppression, which means it operates directly on the public AWS API endpoint rather than through VPC endpoints.",
    "attack_vector": "Network traffic between the Lambda function and AWS services traverses the public internet, potentially exposing API calls and sensitive data to network monitoring or interception.",
    "impact": "Potential exposure of sensitive information in transit, including any data exchanged with Bedrock services.",
    "remediation": "Deploy the Lambda function within a VPC and use VPC endpoints for AWS services to ensure traffic remains within the AWS network. Configure appropriate security groups to restrict access.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-319",
    "compliance_violations": ["AWS Well-Architected Framework - Security Pillar"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-004",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Denial of Service",
    "severity": "Low",
    "resource_type": "AWS::Serverless::Function",
    "resource_name": "BDAProjectLambda",
    "title": "Missing Concurrency Limits on Lambda Function",
    "issue": "The Lambda function has explicitly suppressed the W92 cfn_nag warning for missing concurrency limits, which could allow unbounded scaling during high traffic or in a DoS scenario.",
    "attack_vector": "An attacker could trigger many simultaneous invocations of the function, potentially causing resource exhaustion or high costs.",
    "impact": "Potential service disruption or unexpected AWS billing charges due to unbounded Lambda function execution.",
    "remediation": "Implement reserved concurrency limits on the Lambda function to cap the maximum number of concurrent executions and prevent excessive resource consumption.",
    "priority": 4,
    "estimated_effort": "Low",
    "cwe_id": "CWE-770",
    "compliance_violations": ["AWS Well-Architected Framework - Cost Optimization Pillar"],
    "references": ["https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-005",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Tampering",
    "severity": "Medium",
    "resource_type": "Custom::BDAProject",
    "resource_name": "BDAProject",
    "title": "No Data Validation for Custom Resource Properties",
    "issue": "The BDAProject custom resource doesn't appear to have input validation for project properties like BlueprintNames, which are provided as parameters to the Bedrock API calls.",
    "attack_vector": "If an attacker can influence these parameters (through CloudFormation stack updates), they could potentially inject malicious values or perform injection attacks against the Bedrock API.",
    "impact": "Potential manipulation of Bedrock Data Automation resources or injection attacks through malicious input parameters.",
    "remediation": "Implement strong input validation in the BDAProjectLambda handler function to verify all parameters meet expected formats and constraints before passing them to AWS APIs.",
    "priority": 3,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-20",
    "compliance_violations": ["OWASP Top 10 A1:2017-Injection"],
    "references": ["https://owasp.org/www-project-top-ten/2017/A1_2017-Injection"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-006",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Elevation of Privilege",
    "severity": "Medium",
    "resource_type": "AWS::IAM::Role",
    "resource_name": "LambdaExecutionRole",
    "title": "Missing Condition Keys in IAM Policies",
    "issue": "The IAM policy for LambdaExecutionRole grants broad Bedrock permissions without conditional constraints such as source IP restrictions, time-of-day limitations, or MFA requirements.",
    "attack_vector": "If the Lambda function is compromised or credentials are leaked, an attacker could use the permissions from any location without additional verification requirements.",
    "impact": "Increased blast radius of compromised credentials with no additional security layers beyond the credentials themselves.",
    "remediation": "Add IAM condition keys to the policy to restrict access based on source IP, require MFA for sensitive operations, implement time-based constraints, and add aws:PrincipalArn conditions to limit which entities can assume the role.",
    "priority": 2,
    "estimated_effort": "Medium",
    "cwe_id": "CWE-272",
    "compliance_violations": ["CIS AWS Foundations Benchmark 1.2"],
    "references": ["https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html"],
    "status": "Open"
  },
  {
    "id": "GENAIIDP-SAMPLE-LENDING-PROJECT-THREAT-007",
    "stack": "genaiidp-sample-lending-project",
    "stride_category": "Repudiation",
    "severity": "Low",
    "resource_type": "Custom::BDAProject",
    "resource_name": "BDAProject",
    "title": "Missing Version Control for Blueprint Changes",
    "issue": "The template includes a hardcoded Version parameter ('04-04-2025') but doesn't implement proper versioning for blueprints or project configurations, making it difficult to track or roll back changes.",
    "attack_vector": "Malicious changes to blueprints or configurations could be difficult to detect or attribute without proper versioning and change tracking.",
    "impact": "Inability to track who made changes to blueprints or project configurations, or to roll back to previous stable versions after undesired changes.",
    "remediation": "Implement proper versioning for blueprints and project configurations. Use AWS tags to track metadata about resources including creation date, owner, and purpose. Consider implementing a change management process for blueprint updates.",
    "priority": 4,
    "estimated_effort": "Low",
    "cwe_id": "CWE-778",
    "compliance_violations": ["NIST 800-53 CM-8"],
    "references": ["https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html"],
    "status": "Open"
  }
]